import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import os

import pymongo
from pymongo import MongoClient

prefix = "."
client = commands.Bot(command_prefix=prefix)
client.remove_command("help")

token = str(os.environ.get("guild_manager_token"))
app_string = str(os.environ.get("cluster_app_string"))
default_avatar_url = "https://cdn.discordapp.com/attachments/664230839399481364/677534213418778660/default_image.png"

cluster = MongoClient(app_string)
db = cluster["guild_data"]

#========Lists and values=========
param_desc = {
    "name": {
        "usage": f'`{prefix}edit-guild name [–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ] –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ`',
        "example": f'`{prefix}edit-guild name [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –õ—É—á—à–∞—è –≥–∏–ª—å–¥–∏—è`'
    },
    "description": {
        "usage": f'`{prefix}edit-guild description [–ì–∏–ª—å–¥–∏—è] –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ`',
        "example": f'`{prefix}edit-guild description [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –æ–±—â–∞—Ç—å—Å—è`'
    },
    "avatar": {
        "usage": f'`{prefix}edit-guild avatar [–ì–∏–ª—å–¥–∏—è] –°—Å—ã–ª–∫–∞`',
        "example": f'`{prefix}edit-guild avatar [–ú–æ—è –≥–∏–ª—å–¥–∏—è] {default_avatar_url}`'
    },
    "leader": {
        "usage": f'`{prefix}edit-guild leader [–ì–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`',
        "example": f'`{prefix}edit-guild leader [–ú–æ—è –≥–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`'
    },
    "helper": {
        "usage": f'`{prefix}edit-guild helper [–ì–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`',
        "example": f'`{prefix}edit-guild helper [–ú–æ—è –≥–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`'
    },
    "role": {
        "usage": f'`{prefix}edit-guild role [–ì–∏–ª—å–¥–∏—è] @–†–æ–ª—å (–∏–ª–∏ delete)`',
        "example": f'`{prefix}edit-guild role [–ú–æ—è –≥–∏–ª—å–¥–∏—è] delete`'
    },
    "privacy": {
        "usage": f'`{prefix}edit-guild privacy [–ì–∏–ª—å–¥–∏—è] on / off`',
        "example": f'`{prefix}edit-guild privacy [–ú–æ—è –≥–∏–ª—å–¥–∏—è] on`'
    }
}

owner_ids = [301295716066787332]

guild_limit = 30
member_limit = 500

def c_split(text, lll=" "):
    out=[]
    wid=len(lll)
    text_l=len(text)
    start=0
    end=-1
    for i in range(text_l-wid+1):
        if text[i:i+wid]==lll:
            end=i
            if start<end:
                out.append(text[start:end])
            start=i+wid
    if end!=text_l-wid:
        out.append(text[start:text_l])
    return out

def carve_int(string):
    nums = [str(i) for i in range(10)]
    out = ""
    found = False
    for letter in string:
        if letter in nums:
            found = True
            out += letter
        elif found:
            break
    if out == "":
        out = None
    else:
        out = int(out)
    return out

def is_int(string):
    out = True
    try:
        int(string)
    except ValueError:
        out = False
    return out

def sep_args(text):
    text += " "
    if text[0] != "[":
        i = text.find(" ")
        return (text[:+i], text[+i:].strip())
    else:
        bal = 0
        sep = len(text) - 1
        for i in range(len(text)):
            s = text[i]
            if s == "[":
                bal += 1
            elif s == "]":
                bal -= 1
            if bal == 0:
                sep = i
                break
        return (text[1:sep], text[+sep+1:].strip())

def exclude(symbols, text):
    out = ""
    for s in text:
        if s not in symbols:
            out += s
    return out

def get_subguild(collection_part, subguild_name):
    out = None
    if "subguilds" in collection_part:
        subguilds = collection_part["subguilds"]
        for subguild in subguilds:
            if "name" in subguild and subguild["name"] == subguild_name:
                out = subguild
                break
    return out

def perms_for(role):
    owned = {
    "create_instant_invite": role.permissions.create_instant_invite,
    "kick_members": role.permissions.kick_members,
    "ban_members": role.permissions.ban_members,
    "administrator": role.permissions.administrator,
    "manage_channels": role.permissions.manage_channels,
    "manage_roles": role.permissions.manage_roles,
    "manage_guild": role.permissions.manage_guild,
    "view_audit_log": role.permissions.view_audit_log,
    "change_nickname": role.permissions.change_nickname,
    "manage_nicknames": role.permissions.manage_nicknames,
    "manage_webhooks": role.permissions.manage_webhooks,
    "manage_messages": role.permissions.manage_messages,
    "manage_emojis": role.permissions.manage_emojis,
    "mention_everyone": role.permissions.mention_everyone
    }
    return owned

def has_permissions(member, perm_array):
    owner_ids = [301295716066787332]

    to_have = len(perm_array)
    if member.id == member.guild.owner_id or member.id in owner_ids:
        return True
    else:
        found_num = 0
        found = []
        for role in member.roles:
            owned = perms_for(role)
            if owned["administrator"]:
                found_num = to_have
            else:
                for perm in perm_array:
                    if not perm in found and owned[perm]:
                        found.append(perm)
                        found_num += 1
            if found_num >= to_have:
                break
                    
        return True if found_num >= to_have else False

def has_any_permission(member, perm_array):
    if member.id == member.guild.owner_id:
        return True
    else:
        has = False
        for perm in perm_array:
            for role in member.roles:
                role_perms = perms_for(role)
                if role_perms["administrator"] or role_perms[perm]:
                    has = True
                    break
            if has:
                break
        return has

def has_roles(member, role_array):
    has_them = True
    if not has_permissions(member, ["administrator"]):
        for role in role_array:
            if f"{type(role)}" == "<class 'bson.int64.Int64'>":
                role = member.guild.get_role(role)
            if not role in member.roles:
                has_them = False
                break
    return has_them

def image_link(string):
    return string.startswith("https://")

def f_username(user):
    line = f"{user}"
    fsymbs = ">`*_~|"
    out = ""
    for s in line:
        if s in fsymbs:
            out += f"\\{s}"
        else:
            out += s
    return out

def get_member(guild, ID):
    return discord.utils.get(guild.members, id=ID)

def emj(name):
    emoji_guild = client.get_guild(642107341868630016)
    emoji = discord.utils.get(emoji_guild.emojis, name = name)
    return emoji

async def read_message(channel, user, t_out):
    try:
        msg = await client.wait_for("message", check=lambda message: user.id==message.author.id and channel.id==message.channel.id, timeout=t_out)
    except asyncio.TimeoutError:
        reply=discord.Embed(
            title="üïë –í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –Ω–µ –ø–∏—Å–∞–ª–∏",
            description=f"–¢–∞–π–º–∞—É—Ç: {t_out}",
            color=discord.Color.blurple()
        )
        await channel.send(content=user.mention, embed=reply)
        return "Timeout"
    else:
        return msg

async def give_join_role(member, role_id):
    if role_id != None:
        role = discord.utils.get(member.guild.roles, id = role_id)
        if role != None and role not in member.roles:
            try:
                await member.add_roles(role)
            except Exception:
                pass
    return

async def remove_join_role(member, role_id):
    if role_id != None:
        role = discord.utils.get(member.guild.roles, id = role_id)
        if role != None and role in member.roles:
            try:
                await member.remove_roles(role)
            except Exception:
                pass
    return

async def knock_dm(user, extra_channel, log_emb):
    try:
        await user.send(embed = log_emb)
    except Exception:
        await extra_channel.send(content = f"{user.mention}, –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ –í–∞–º", embed = log_emb)

class detect:
    @staticmethod
    def member(guild, search):
        ID = carve_int(search)
        if ID == None:
            ID = 0
        member = guild.get_member(ID)
        return member
    
    @staticmethod
    def channel(guild, search):
        ID = carve_int(search)
        if ID == None:
            ID = 0
        channel = guild.get_channel(ID)
        return channel
    
    @staticmethod
    def role(guild, search):
        ID = carve_int(search)
        if ID == None:
            ID = 0
        role = guild.get_role(ID)
        if role == None:
            role = discord.utils.get(guild.roles, name=search)
        return role

@client.event
async def on_ready():
    print(
        ">> Bot is ready\n"
        f">> Prefix is {prefix}\n"
        f">> Bot user: {client.user}"
    )

@client.event
async def on_member_remove(member):
    collection = db["subguilds"]
    collection.find_one_and_update(
        {"_id": member.guild.id, "subguilds.leader_id": member.id},
        {"$pull": {"subguilds": {"leader_id": member.id}}}
    )
    collection.find_one_and_update(
        {"_id": member.guild.id, f"subguilds.members.{member.id}": {"$exists": True}},
        {
            "$unset": {f"subguilds.$.members.{member.id}": ""},
            "$pull": {f"subguilds.$.requests": member.id}
        }
    )

@client.event
async def on_member_ban(guild, member):
    collection = db["subguilds"]

    res = collection.find_one(
        {"_id": guild.id, f"subguilds.members.{member.id}": {"$exists": True}},
        projection={
            "subguilds.name": True,
            "subguilds.members": True,
            "rep_logs": True
        }
    )
    subguild = None
    if res != None:
        for sg in res["subguilds"]:
            for memb in sg["members"]:
                if f"{member.id}" in memb:
                    subguild = sg
                    break
            if subguild != None:
                break
        logs = res["rep_logs"]
    del res

    if subguild != None:
        log = {
            "guild": subguild["name"],
            "changer_id": client.user.id,
            "reason": "–£—á–∞—Å—Ç–Ω–∏–∫ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω",
            "action": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ",
            "value": -50
        }
        logs.append(log)
        lll = len(logs)
        if lll > 10:
            logs = logs[lll - 10:lll]

        collection.find_one_and_update(
            {"_id": guild.id, f"subguilds.name": subguild["name"]},
            {
                "$inc": {"subguilds.$.reputation": -50},
                "$unset": {f"subguilds.$.members.{member.id}": ""},
                "$set": {"rep_logs": logs}
            },
            upsert=True
        )

@client.event
async def on_guild_remove(guild):
    collection = db["subguilds"]
    collection.delete_one({"_id": guild.id})
    collection = db["cmd_channels"]
    collection.delete_one({"_id": guild.id})

#=========Commands==========
@client.command()
async def logout(ctx):
    if ctx.author.id in owner_ids:
        await ctx.send("Logging out...")
        await client.logout()

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["info", "commands"])
async def help(ctx):
    p = prefix
    user_cmd_desc = (
        f"`{p}join-guild –ì–∏–ª—å–¥–∏—è` - *–∑–∞–π—Ç–∏ –≤ –≥–∏–ª—å–¥–∏—é*\n"
        f"`{p}leave-guild` - *–≤—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π –≥–∏–ª—å–¥–∏–∏*\n"
        f"`{p}top` - *—Ç–æ–ø –≥–∏–ª—å–¥–∏–π —Å–µ—Ä–≤–µ—Ä–∞*\n"
        f"‚Ä£‚Äî‚Ä£ `{p}top mentions / members / roles / reputation` - *–¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–ø–∞*\n"
        f"`{p}guild-info –ì–∏–ª—å–¥–∏—è` - *–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≥–∏–ª—å–¥–∏–∏*\n"
        f"`{p}guild-top –°—Ç—Ä–∞–Ω–∏—Ü–∞_—Ç–æ–ø–∞ –ì–∏–ª—å–¥–∏—è` - *—Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥–∏–ª—å–¥–∏–∏*\n"
        f"`{p}user-info @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å` - *–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π / —á—É–∂–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å*\n"
    )
    owners_cmd_desc = (
        f'`{p}edit-guild –ü–∞—Ä–∞–º–µ—Ç—Ä [–ì–∏–ª—å–¥–∏—è] –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ` - *–ø–æ–¥—Ä–æ–±–Ω–µ–µ: `{p}edit-guild`*\n'
        f"`{p}delete-guild –ì–∏–ª—å–¥–∏—è` - *—É–¥–∞–ª—è–µ—Ç –≥–∏–ª—å–¥–∏—é*\n"
        f"`{p}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è` - *—Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é*\n"
        f"`{p}accept –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è` - *–ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É*\n"
        f"`{p}decline –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è` - *–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É*\n"
        f"‚Ä£‚Äî‚Ä£ `{p}accept/decline all –ì–∏–ª—å–¥–∏—è` - *–ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏*\n"
        f"`{p}kick –ü–∞—Ä–∞–º–µ—Ç—Ä –ó–Ω–∞—á–µ–Ω–∏–µ –ì–∏–ª—å–¥–∏—è` - *–∫–∏–∫ —Ä–∞–∑–Ω—ã—Ö –∫–∞–ª–∏–±—Ä–æ–≤, –ø–æ–¥—Ä–æ–±–Ω–µ–µ: `{p}kick`*\n"
        f'`{p}count-roles [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏] @–†–æ–ª—å1 @–†–æ–ª—å2 ...` - *–ø–æ–¥—Å—á—ë—Ç —á–ª–µ–Ω–æ–≤ –≥–∏–ª—å–¥–∏–∏ —Å –∫–∞–∂–¥–æ–π —Ä–æ–ª—å—é*\n'
        "> –¢–æ–ª—å–∫–æ –º–∞—Å—Ç–µ—Ä–∞–º:\n"
        f"`{p}create-guild –ù–∞–∑–≤–∞–Ω–∏–µ` - *—Å–æ–∑–¥–∞—ë—Ç –≥–∏–ª—å–¥–∏—é*\n"
        f"`{p}rep –ü–∞—Ä–∞–º–µ—Ç—Ä –ß–∏—Å–ª–æ [–ì–∏–ª—å–¥–∏—è] –ü—Ä–∏—á–∏–Ω–∞` - *–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π, –ø–æ–¥—Ä–æ–±–Ω–µ–µ: `{p}rep`*\n"
        f"`{p}rep-logs` - *–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–µ–π—Å—Ç–≤–∏–π —Å —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π*\n"
    )
    adm_cmd_desc = (
        f"`{p}settings` - *—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏*\n"
        f"`{p}cmd-channels #–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...` - *–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª—ã —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è*\n"
        f"‚Ä£‚Äî‚Ä£ `{p}cmd-channels delete` - *—Å–±—Ä–æ—Å–∏—Ç—å*\n"
        f"`{p}master-role –†–æ–ª—å` - *–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª—å –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π*\n"
        f"‚Ä£‚Äî‚Ä£ `{p}master-role delete` - *—Å–±—Ä–æ—Å–∏—Ç—å*\n"
        f"`{p}members-limit –ß–∏—Å–ª–æ` - *–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≥–∏–ª—å–¥–∏—é*\n"
        f"`{p}reset-guilds messages / mentions` - *–æ–±–Ω—É–ª—è–µ—Ç –ª–∏–±–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è, –ª–∏–±–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ—Ö –≥–∏–ª—å–¥–∏–π —Å–µ—Ä–≤–µ—Ä–∞*\n"
        f"`{p}ping-count @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å` - *–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–∏–Ω–≥–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è*\n"
    )
    help_emb = discord.Embed(
        title = f"üì∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
        color = discord.Color.from_rgb(150, 150, 150)
    )
    
    help_emb.add_field(name = "**–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º**", value = user_cmd_desc, inline=False)
    help_emb.add_field(name = "**–ì–ª–∞–≤–∞–º –≥–∏–ª—å–¥–∏–π / –ú–∞—Å—Ç–µ—Ä–∞–º –≥–∏–ª—å–¥–∏–π**", value = owners_cmd_desc, inline=False)
    if has_permissions(ctx.author, ["administrator"]):
        help_emb.add_field(name = "**–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º**", value = adm_cmd_desc, inline=False)
    await ctx.send(embed = help_emb)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command()
async def settings(ctx):
    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    else:
        collection = db["cmd_channels"]
        result = collection.find_one({"_id": ctx.guild.id})
        wl_channels = None
        if result != None:
            wl_channels = result["channels"]
        
        if wl_channels == None:
            chan_desc = "> –í—Å–µ –∫–∞–Ω–∞–ª—ã\n"
        else:
            chan_desc = ""
            for ID in wl_channels:
                chan_desc += f"> {client.get_channel(ID).mention}\n"
        
        collection = db["subguilds"]
        result = collection.find_one(
            {"_id": ctx.guild.id, "mentioner_id": {"$exists": True}},
            projection={
                "mentioner_id": True,
                "member_limit": True,
                "master_role_id": True
            }
        )
        pinger_id = None
        mr_id = None
        lim_desc = member_limit
        if result != None:
            if "mentioner_id" in result:
                pinger_id = result["mentioner_id"]
            if "member_limit" in result:
                lim_desc = result["member_limit"]
            if "master_role_id" in result:
                mr_id = result["master_role_id"]
        
        if pinger_id == None:
            ping_desc = "–≤—ã–∫–ª—é—á–µ–Ω–æ"
        else:
            ping_desc = f"{client.get_user(pinger_id)}"
        
        if mr_id == None:
            mr_desc = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        else:
            mr_desc = f"<@&{mr_id}>"
        
        reply = discord.Embed(
            title = "‚öô –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            description = (
                f"**–ö–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:**\n"
                f"{chan_desc}"
                f"**–†–æ–ª—å –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π:**\n"
                f"> {mr_desc}\n"
                f"**–í–µ—Å—Ç–∏ –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ—Ç:**\n"
                f"> {ping_desc}\n"
                f"**–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≥–∏–ª—å–¥–∏—é:**\n"
                f"> {lim_desc}\n\n"
                f"-> –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: `{prefix}help`"
            ),
            color = discord.Color.blurple()
        )
        reply.set_thumbnail(url = f"{ctx.guild.icon_url}")
        await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["cmd-channels", "cmdchannels", "cc"])
async def cmd_channels(ctx, *raw_ch):
    collection = db["cmd_channels"]

    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    elif "delete" in raw_ch[0].lower():
        collection.find_one_and_update(
            {"_id": ctx.guild.id},
            {
                "$set": {"channels": None}
            }
        )
        reply = discord.Embed(
            title = "‚ôª –ö–∞–Ω–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã",
            description = "–¢–µ–ø–µ—Ä—å —è —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö",
            color = discord.Color.dark_green()
        )
        await ctx.send(embed = reply)

    else:
        channels = [detect.channel(ctx.guild, s) for s in raw_ch]
        if None in channels:
            reply = discord.Embed(
                title = f"üí¢ –û—à–∏–±–∫–∞",
                description = (
                    f"–í –∫–∞—á–µ—Å—Ç–≤–µ –∫–∞–Ω–∞–ª–æ–≤ —É–∫–∞–∂–∏—Ç–µ –∏—Ö **#—Å—Å—ã–ª–∫–∏** –∏–ª–∏ **ID**"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            channel_ids = [c.id for c in channels]

            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {
                    "$set": {"channels": channel_ids}
                },
                upsert=True
            )
            desc = ""
            for channel in channels:
                desc += f"> {channel.mention}\n"
            reply = discord.Embed(
                title = "üõ† –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                description = (
                    f"–¢–µ–ø–µ—Ä—å –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö:\n"
                    f"{desc}"
                ),
                color = discord.Color.blurple()
            )
            await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["members-limit", "memberslimit", "ml"])
async def members_limit(ctx, lim):
    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    elif not lim.isdigit() or "-" in lim:
        reply = discord.Embed(
            title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
            description = f"–ê—Ä–≥—É–º–µ–Ω—Ç {lim} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    elif int(lim) > member_limit or int(lim) < 1:
        reply = discord.Embed(
            title = "‚ùå –û—à–∏–±–∫–∞",
            description = f"–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{member_limit}** –Ω–∞ –≥–∏–ª—å–¥–∏—é",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    else:
        collection = db["subguilds"]
        lim = int(lim)

        collection.find_one_and_update(
            {"_id": ctx.guild.id},
            {"$set": {"member_limit": lim}},
            upsert=True
        )
        reply = discord.Embed(
            title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
            description = (
                f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥–∏–ª—å–¥–∏—è—Ö: **{lim}**\n"
                f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{prefix}settings`"
            ),
            color = discord.Color.dark_green()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["master-role", "masterrole", "mr"])
async def master_role(ctx, *, r_search):
    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

    else:
        correct_arg = True
        role = discord.utils.get(ctx.guild.roles, name = r_search)
        if role == None:
            role = detect.role(ctx.guild, r_search)
        
        if r_search.lower() == "delete":
            value = None

        elif role == None:
            correct_arg = False
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
                description = f"–í—ã –≤–≤–µ–ª–∏ {r_search}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            value = role.id
        
        if correct_arg:
            collection = db["subguilds"]
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$set": {"master_role_id": value}},
                upsert=True
            )

            desc = "–†–æ–ª—å –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π —É–¥–∞–ª–µ–Ω–∞"
            if value != None:
                desc = f"–†–æ–ª—å –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π: <@&{value}>"
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = desc,
                color = discord.Color.dark_green()
            )
            await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["rep"])
async def reputation(ctx, param, value=None, *, text_data=None):
    param = param.lower()
    params = {
        "change": {
            "usage": f"`{prefix}rep change –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
            "example": f"`{prefix}rep change 10 –ì–∏–ª—å–¥–∏—è`",
            "info": "–ò–∑–º–µ–Ω—è–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≥–∏–ª—å–¥–∏–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –æ—á–∫–æ–≤"
        },
        "set": {
            "usage": f"`{prefix}rep set –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
            "example": f"`{prefix}rep set 70 –ì–∏–ª—å–¥–∏—è`",
            "info": "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É –≥–∏–ª—å–¥–∏–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é"
        }
    }

    if not param in params:
        reply = discord.Embed(
            title = "üìë –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
            description = (
                f"–í—ã –≤–≤–µ–ª–∏: `{param}`\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                "> `change`\n"
                "> `set`\n"
                f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ: `{prefix}rep change / set`"
            ),
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

    elif value == None or text_data == None:
        param_desc = params[param]
        reply = discord.Embed(
            title = f"‚ùì {prefix}rep {param}",
            description = (
                f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {param_desc['usage']}\n"
                f"**–ü—Ä–∏–º–µ—Ä:** {param_desc['example']}\n"
                f"-> {param_desc['info']}"
            )
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

    elif not is_int(value):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ—Ç–Ω",
            description = f"–í—Ö–æ–¥–Ω–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç {value} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

    else:
        collection = db["subguilds"]
        guild_name, text = sep_args(text_data)
        if text == "":
            text = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"

        result = collection.find_one(
            {"_id": ctx.guild.id, "subguilds.name": guild_name},
            projection={
                "master_role_id": True,
                "rep_logs": True
            }
        )
        
        if result == None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = (
                    f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                    f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{prefix}guilds`"
                ),
                color = discord.Color.from_rgb(40, 40, 40)
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        else:
            mr_id = None
            if "master_role_id" in result:
                mr_id = result["master_role_id"]
            rep_logs = []
            if "rep_logs" in result:
                rep_logs = result["rep_logs"]
            
            if not has_roles(ctx.author, [mr_id]) and not has_permissions(ctx.author, ["administrator"]):
                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        "**–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:**\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π"
                    ),
                    color = discord.Color.dark_red()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                if param == "change":
                    mode = "$inc"
                    act = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ"
                elif param == "set":
                    mode = "$set"
                    act = "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
                
                log = {
                    "guild": guild_name,
                    "changer_id": ctx.author.id,
                    "reason": text,
                    "action": act,
                    "value": int(value)
                }
                rep_logs.append(log)
                lll = len(rep_logs)
                rep_logs = rep_logs[lll-10:lll]

                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        mode: {"subguilds.$.reputation": int(value)},
                        "$set": {"rep_logs": rep_logs}
                    },
                    upsert=True
                )

                reply = discord.Embed(
                    title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                    description = f"–†–µ–ø—É—Ç–∞—Ü–∏—è –≥–∏–ª—å–¥–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∞.\n–ü—Ä–æ—Ñ–∏–ª—å: `{prefix}guild-info {guild_name}`",
                    color = discord.Color.dark_green()
                )
                await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["rep-logs", "replogs"])
async def rep_logs(ctx):
    collection = db["subguilds"]

    result = collection.find_one(
        {"_id": ctx.guild.id},
        projection={
            "master_role_id": True,
            "rep_logs": True
        }
    )
    mr_id = None
    if result != None and "master_role_id" in result:
        mr_id = result["master_role_id"]
    rep_logs = []
    if result != None and "rep_logs" in result:
        rep_logs = result["rep_logs"]
    
    if not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                "–ò–ª–∏\n"
                "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        log_emb = discord.Embed(
            title = "üõ† –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–µ–π—Å—Ç–≤–∏–π",
            color = discord.Color.dark_orange()
        )
        for log in rep_logs:
            user = client.get_user(log["changer_id"])
            desc = (
                f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {f_username(user)}\n"
                f"{log['action']} –Ω–∞ **{log['value']}** üîÖ\n"
                f"–ü—Ä–∏—á–∏–Ω–∞: {log['reason']}"
            )
            log_emb.add_field(name=f"üí† **–ì–∏–ª—å–¥–∏—è:** {log['guild']}", value=desc)
        await ctx.send(embed=log_emb)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["create-guild", "createguild", "cg"])
async def create_guild(ctx, *, guild_name):
    collection = db["subguilds"]
    guild_name = exclude(["[", "]"], guild_name)

    result = collection.find_one(
        {"_id": ctx.guild.id},
        projection={
            "_id": True,
            "subguilds.name": True,
            "master_role_id": True
        }
    )
    mr_id = None
    if result != None and "master_role_id" in result:
        mr_id = result["master_role_id"]

    if not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
        reply = discord.Embed(
            title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                "–ò–ª–∏\n"
                "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        total_guilds = 0
        if result != None:
            total_guilds = len(result["subguilds"])

        if total_guilds >= guild_limit:
            reply = discord.Embed(
                title = "üõ† –ú–∞–∫—Å–∏–º—É–º –≥–∏–ª—å–¥–∏–π",
                description = (
                    f"–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –≥–∏–ª—å–¥–∏–π - {guild_limit}\n"
                    f"–£–¥–∞–ª–∏—Ç—å –≥–∏–ª—å–¥–∏—é: `{prefix}delete-guild –ì–∏–ª—å–¥–∏—è`"
                ),
                color = discord.Color.dark_orange()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            subguild = get_subguild(result, guild_name)
            if subguild != None:
                reply = discord.Embed(
                    title = "‚ö† –û—à–∏–±–∫–∞",
                    description = f"–ì–∏–ª—å–¥–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}** —É–∂–µ –µ—Å—Ç—å –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ",
                    color = discord.Color.dark_gold()
                )
                await ctx.send(embed = reply)
            
            else:
                collection.find_one_and_update(
                    {"_id": ctx.guild.id},
                    {
                        "$addToSet": {
                            "subguilds": {
                                "name": guild_name,
                                "description": "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è",
                                "avatar_url": default_avatar_url,
                                "leader_id": ctx.author.id,
                                "helper_id": None,
                                "role_id": None,
                                "private": False,
                                "requests": [],
                                "reputation": 100,
                                "mentions": 0,
                                "members": {}
                            }
                        }
                    },
                    upsert=True
                )

                reply = discord.Embed(
                    title = f"‚úÖ –ì–∏–ª—å–¥–∏—è **{guild_name}** —Å–æ–∑–¥–∞–Ω–∞",
                    description = (
                        f"–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–∏–ª—å–¥–∏—é: `{prefix}edit-guild`\n"
                        f"–ü—Ä–æ—Ñ–∏–ª—å –≥–∏–ª—å–¥–∏–∏: `{prefix}guild-info {guild_name}`\n"
                        f"–ó–∞–π—Ç–∏ –≤ –≥–∏–ª—å–¥–∏—é `{prefix}join-guild {guild_name}`"
                    ),
                    color = discord.Color.green()
                )
                reply.set_thumbnail(url = default_avatar_url)
                await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["edit-guild", "editguild", "eg", "edit"])
async def edit_guild(ctx, parameter, *, text_data = None):
    collection = db["subguilds"]
    parameter = parameter.lower()
    parameters = {
        "name": "name",
        "description": "description",
        "avatar": "avatar_url",
        "leader": "leader_id",
        "helper": "helper_id",
        "role": "role_id",
        "privacy": "private"
    }

    if parameter not in parameters:
        reply = discord.Embed(
            title = "üìë –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫",
            description = (
                "> `name`\n"
                "> `description`\n"
                "> `avatar`\n"
                "> `leader`\n"
                "> `helper`\n"
                "> `role`\n"
                "> `privacy`\n"
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ü–∞—Ä–∞–º–µ—Ç—Ä [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏] –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`\n'
                f'**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} name [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –•—Ä–∞–Ω–∏—Ç–µ–ª–∏`\n'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    else:
        if text_data == None:
            reply = discord.Embed(
                title = f"üõ† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ {prefix}edit-guild {parameter}",
                description = (
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {param_desc[parameter]['usage']}\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** {param_desc[parameter]['example']}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        guild_name, text = sep_args(text_data)

        result = collection.find_one(
            filter={"_id": ctx.guild.id, "subguilds.name": guild_name},
            projection={"subguilds.members": False}
        )

        if result == None:
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"–ì–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}** –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
                color = discord.Color.from_rgb(40, 40, 40)
            )
            await ctx.send(embed = reply)
        
        else:
            subguild = get_subguild(result, guild_name)
            leader_id = subguild["leader_id"]
            mr_id = None
            if "master_role_id" in result:
                mr_id = result["master_role_id"]

            if ctx.author.id != leader_id and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = discord.Color.dark_red()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            else:
                correct_arg = True
                value = text
                if parameter == "name":
                    value = exclude(["[", "]"], text)
                    if value in [sg["name"] for sg in result["subguilds"]]:
                        correct_arg = False
                        reply = discord.Embed(
                            title = "‚ùå –û—à–∏–±–∫–∞",
                            description = f"–ì–∏–ª—å–¥–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {f_username(value)} —É–∂–µ –µ—Å—Ç—å",
                            color = discord.Color.dark_red()
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)

                elif parameter in ["leader", "helper"]:
                    value = detect.member(ctx.guild, text)

                    if text.lower() == "delete":
                        value = None

                    elif value == None:
                        correct_arg = False

                        reply = discord.Embed(
                            title = "üí¢ –û—à–∏–±–∫–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ {text}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                            color = discord.Color.dark_red()
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)

                    elif value.id == leader_id:
                        reply = discord.Embed(
                            title = "üí¢ –û—à–∏–±–∫–∞",
                            description = f"{f_username(value)} —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–æ–π —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏.",
                            color = discord.Color.dark_red()
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)

                    else:
                        value = value.id
                    
                elif parameter == "role":
                    value = detect.role(ctx.guild, text)
                    if text.lower() == "delete":
                        value = None
                    elif value == None:
                        correct_arg = False

                        reply = discord.Embed(
                            title = "üí¢ –û—à–∏–±–∫–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ {text}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                            color = discord.Color.from_rgb(40, 40, 40)
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)
                    else:
                        value = value.id
                elif parameter == "avatar":
                    correct_arg = image_link(text)
                    if not correct_arg:
                        reply = discord.Embed(
                            title = "üí¢ –û—à–∏–±–∫–∞",
                            description = f"–ù–µ —É–¥–∞—ë—Ç—Å—è –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —Å—Å—ã–ª–∫–µ {text}",
                            color = discord.Color.from_rgb(40, 40, 40)
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)

                elif parameter == "privacy":
                    on = ["on", "–≤–∫–ª", "1"]
                    off = ["off", "–≤—ã–∫–ª", "0"]
                    if text.lower() in on:
                        value = True
                    elif text.lower() in off:
                        value = False
                    else:
                        correct_arg = False

                        reply = discord.Embed(
                            title = "üí¢ –û—à–∏–±–∫–∞",
                            description = f"–í—Ö–æ–¥–Ω–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç {text} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å `on` –∏–ª–∏ `off`",
                            color = discord.Color.from_rgb(40, 40, 40)
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)
                
                if correct_arg:
                    subguild[parameters[parameter]] = value

                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$set": {f"subguilds.$.{parameters[parameter]}": value}},
                        upsert=True
                    )

                    reply = discord.Embed(
                        title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                        description = f"**->** –ü—Ä–æ—Ñ–∏–ª—å –≥–∏–ª—å–¥–∏–∏: `{prefix}guild-info {subguild['name']}`",
                        color = discord.Color.green()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)

@commands.cooldown(1, 30, commands.BucketType.member)
@client.command(aliases = ["delete-guild", "deleteguild", "dg"])
async def delete_guild(ctx, *, guild_name):
    collection = db["subguilds"]
    result = collection.find_one(
        {"_id": ctx.guild.id, "subguilds.name": guild_name},
        projection={
            "subguilds.name": True,
            "subguilds.leader_id": True,
            "master_role_id": True
        }
    )

    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = (
                f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{prefix}guilds`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        await ctx.send(embed = reply)
    else:
        mr_id = None
        if "master_role_id" in result:
            mr_id = result["master_role_id"]
        
        subguild = get_subguild(result, guild_name)
        del result

        if ctx.author.id != subguild["leader_id"] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                    f"> –ì–ª–∞–≤–∞ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                    "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            collection.find_one_and_update(
                {"_id": ctx.guild.id, "subguilds.name": guild_name},
                {
                    "$pull": {
                        "subguilds": {"name": guild_name}
                    }
                }
            )
            
            reply = discord.Embed(
                title = "üóë –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
                description = f"–í—ã —É–¥–∞–ª–∏–ª–∏ –≥–∏–ª—å–¥–∏—é **{guild_name}**",
                color = discord.Color.from_rgb(40, 40, 40)
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["req", "request"])
async def requests(ctx, page, *, guild_name):
    collection = db["subguilds"]
    interval = 20

    result = collection.find_one(
        {"_id": ctx.guild.id, "subguilds.name": guild_name},
        projection={
            "master_role_id": True,
            "subguilds.leader_id": True,
            "subguilds.helper_id": True,
            "subguilds.requests": True,
            "subguilds.name": True,
            "subguilds.private": True
        }
    )
    
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**"
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        mr_id = None
        if "master_role_id" in result:
            mr_id = result["master_role_id"]
        
        subguild = get_subguild(result, guild_name)
        del result

        if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                    f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                    "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif not subguild["private"]:
            reply = discord.Embed(
                title = "üõ† –ì–∏–ª—å–¥–∏—è –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif carve_int(page) == None:
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"{page} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            page = carve_int(page)

            bad_ids = []
            req_list = []
            for ID in subguild["requests"]:
                member = get_member(ctx.guild, ID)
                if member == None:
                    bad_ids.append(ID)
                else:
                    req_list.append(member)

            length = len(req_list)

            first_num = (page - 1) * interval
            total_pages = (length - 1) // interval + 1
            if first_num >= length:
                title = "üîé –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                desc = f"**–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü:** {total_pages}"
                if length == 0:
                    title = "üìú –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç"
                    desc = "–ó–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ üéÄ"
                reply = discord.Embed(
                    title = title,
                    description = desc,
                    color = discord.Color.dark_teal()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            else:
                desc = ""
                last_num = min(first_num + interval, length)
                for i in range(first_num, last_num):
                    if req_list != None:
                        desc += f"**{i + 1})** {f_username(req_list[i])}\n"

                reply = discord.Embed(
                    title = "–ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",
                    description = (
                        f"**–í –≥–∏–ª—å–¥–∏—é:** {f_username(guild_name)}\n"
                        f"**–ü—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å:** `{prefix}accept –ù–æ–º–µ—Ä_–∑–∞–ø—Ä–æ—Å–∞ {guild_name}`\n"
                        f"**–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å:** `{prefix}decline –ù–æ–º–µ—Ä_–∑–∞–ø—Ä–æ—Å–∞ {guild_name}`\n\n"
                        f"{desc}"
                    ),
                    color = discord.Color.blurple()
                )
                reply.set_footer(text = f"–°—Ç—Ä. {page}/{total_pages}")
                await ctx.send(embed = reply)
            
            #======Remove invalid members======
            if bad_ids != []:
                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {"$pull": {"subguilds.$.requests": {"$in": bad_ids}}}
                )

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["ac"])
async def accept(ctx, num, *, guild_name):
    collection = db["subguilds"]

    result = collection.find_one(
        {"_id": ctx.guild.id, "subguilds.name": guild_name},
        projection={
            "master_role_id": True,
            "subguilds.leader_id": True,
            "subguilds.helper_id": True,
            "subguilds.requests": True,
            "subguilds.name": True,
            "subguilds.private": True,
            "subguilds.role_id": True
        }
    )
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**"
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        mr_id = None
        if "master_role_id" in result:
            mr_id = result["master_role_id"]
        
        subguild = get_subguild(result, guild_name)
        del result

        id_list = []
        to_pull = []
        for ID in subguild["requests"]:
            member = get_member(ctx.guild, ID)
            if member == None:
                to_pull.append(ID)
            else:
                id_list.append(ID)
        length = len(id_list)

        if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
            correct_args = False

            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                    f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                    "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif not subguild["private"]:
            correct_args = False

            reply = discord.Embed(
                title = "üõ† –ì–∏–ª—å–¥–∏—è –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif num.lower() == "all":
            correct_args = True
            num = "all"
        
        elif carve_int(num) == None:
            correct_args = False
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"{num} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif carve_int(num) > length:
            correct_args = False
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"{num} –ø—Ä–µ–≤—ã—à–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            correct_args = True
            num = carve_int(num)
        
        if correct_args:

            if num == "all":
                new_data = {}
                new_data.update([(f"subguilds.$.members.{ID}", {"id": ID, "messages": 0}) for ID in id_list])

                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        "$pull": {"subguilds.$.requests": {"$in": subguild["requests"]}},
                        "$set": new_data
                    }
                )
                desc = "–í—Å–µ –∑–∞—è–≤–∫–∏ –ø—Ä–∏–Ω—è—Ç—ã"
                for ID in id_list:
                    client.loop.create_task(give_join_role(get_member(ctx.guild, ID), subguild["role_id"]))
                
            else:
                user_id = id_list[num-1]
                to_pull.append(user_id)

                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        "$pull": {"subguilds.$.requests": {"$in": to_pull}},
                        "$set": {f"subguilds.$.members.{user_id}": {"id": user_id, "messages": 0}}
                    }
                )
                member = get_member(ctx.guild, user_id)
                desc = f"–ó–∞—è–≤–∫–∞ {f_username(member)} –ø—Ä–∏–Ω—è—Ç–∞"

                await give_join_role(member, subguild["role_id"])
            
            reply = discord.Embed(
                title = "üõ† –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = desc
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["dec"])
async def decline(ctx, num, *, guild_name):
    collection = db["subguilds"]

    result = collection.find_one(
        {"_id": ctx.guild.id, "subguilds.name": guild_name},
        projection={
            "subguilds.leader_id": True,
            "subguilds.helper_id": True,
            "subguilds.requests": True,
            "subguilds.name": True,
            "subguilds.private": True
        }
    )
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**"
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        mr_id = None
        if "master_role_id" in result:
            mr_id = result["master_role_id"]
        
        subguild = get_subguild(result, guild_name)
        del result

        id_list = []
        to_pull = []
        for ID in subguild["requests"]:
            member = get_member(ctx.guild, ID)
            if member == None:
                to_pull.append(ID)
            else:
                id_list.append(ID)
        length = len(id_list)

        if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
            correct_args = False

            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                    f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                    "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif not subguild["private"]:
            correct_args = False

            reply = discord.Embed(
                title = "üõ† –ì–∏–ª—å–¥–∏—è –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif num.lower() == "all":
            correct_args = True
            num = "all"
        
        elif carve_int(num) == None:
            correct_args = False
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"{num} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif carve_int(num) > length:
            correct_args = False
            reply = discord.Embed(
                title = "üí¢ –û—à–∏–±–∫–∞",
                description = f"{num} –ø—Ä–µ–≤—ã—à–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            correct_args = True
            num = carve_int(num)
        
        if correct_args:
            if num == "all":
                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {"$pull": {"subguilds.$.requests": {"$in": subguild["requests"]}}}
                )
                desc = f"–í—Å–µ –∑–∞—è–≤–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã"
            else:
                user_id = id_list[num-1]
                to_pull.append(user_id)

                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        "$pull": {"subguilds.$.requests": {"$in": to_pull}}
                    }
                )
                member = get_member(ctx.guild, user_id)
                desc = f"–ó–∞—è–≤–∫–∞ {f_username(member)} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
            
            reply = discord.Embed(
                title = "üõ† –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = desc
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command()
async def kick(ctx, parameter, value = None, *, guild_name = None):
    parameter = parameter.lower()
    params = {
        "user": {
            "usage": f"`{prefix}kick user @–£—á–∞—Å—Ç–Ω–∏–∫ –ì–∏–ª—å–¥–∏—è`",
            "example": f"`{prefix}kick user @–£—á–∞—Å—Ç–Ω–∏–∫ –ú–æ—è –ì–∏–ª—å–¥–∏—è`",
            "info": "–ö–∏–∫–Ω—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
        },
        "under": {
            "usage": f"`{prefix}kick under –ü–ª–∞–Ω–∫–∞_—Å–æ–æ–±—â–µ–Ω–∏–π –ì–∏–ª—å–¥–∏—è`",
            "example": f"`{prefix}kick under 50 –ú–æ—è –ì–∏–ª—å–¥–∏—è`",
            "info": "–ö–∏–∫–Ω—É—Ç—å —Ç–µ—Ö, —É –∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–Ω—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–∫–∏"
        },
        "last": {
            "usage": f"`{prefix}kick last –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
            "example": f"`{prefix}kick last 10 –ú–æ—è –≥–∏–ª—å–¥–∏—è`",
            "info": "–ö–∏–∫–Ω—É—Ç—å —Å–∫–æ–ª—å–∫–æ-—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        }
    }
    if not parameter in params:
        desc = ""
        for param in params:
            desc += f"> `{param}`\n"
        reply = discord.Embed(
            title = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
            description = f"–í—ã –≤–≤–µ–ª–∏: `{parameter}`\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n{desc}",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    elif value == None or guild_name == None:
        reply = discord.Embed(
            title = f"üõ† {prefix}kick {parameter}",
            description = (
                f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {params[parameter]['info']}\n"
                f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {params[parameter]['usage']}\n"
                f"**–ü—Ä–∏–º–µ—Ä:** {params[parameter]['example']}"
            )
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        collection = db["subguilds"]
        result = collection.find_one(
            {"_id": ctx.guild.id, "subguilds.name": guild_name},
            projection={
                "master_role_id": True,
                "subguilds.name": True,
                "subguilds.members": True,
                "subguilds.role_id": True,
                "subguilds.leader_id": True,
                "subguilds.helper_id": True
            }
        )
        if result == None:
            reply = discord.Embed(
                title = "‚ùå –ì–∏–ª—å–¥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                description = f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**",
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            mr_id = None
            if "master_role_id" in result:
                mr_id = result["master_role_id"]
            
            subguild = get_subguild(result, guild_name)
            del result

            if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = discord.Color.dark_red()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif parameter == "user":
                user = detect.member(ctx.guild, value)
                if user == None:
                    reply = discord.Embed(
                        title = "üí¢ –£–ø—Å",
                        description = f"–í—ã –≤–≤–µ–ª–∏ {value}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                        color = discord.Color.dark_red()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                elif user.id == subguild["leader_id"]:
                    desc = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≥–ª–∞–≤—É –≥–∏–ª—å–¥–∏–∏"
                    if user.id == ctx.author.id:
                        desc = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è"
                    reply = discord.Embed(
                        title = "‚ùå –û—à–∏–±–∫–∞",
                        description = desc,
                        color = discord.Color.dark_red()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                else:
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$unset": {f"subguilds.$.members.{user.id}": ""}}
                    )
                    reply = discord.Embed(
                        title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"{f_username(user)} –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}**",
                        color = discord.Color.dark_green()
                    )
                await remove_join_role(user, subguild["role_id"])
                await ctx.send(embed = reply)
            
            elif parameter == "under":
                if not value.isdigit() or "-" in value:
                    reply = discord.Embed(
                        title = "üí¢ –£–ø—Å",
                        description = f"–ü–ª–∞–Ω–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º\n–í—ã –≤–≤–µ–ª–∏: {value}",
                        color = discord.Color.dark_red()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                else:
                    value = int(value)

                    memb_data = subguild["members"]
                    holder = []
                    for key in memb_data:
                        memb = memb_data[key]
                        if memb["messages"] <= value and memb["id"] != subguild["leader_id"]:
                            holder.append(memb["id"])
                    del memb_data

                    to_unset = {}
                    to_unset.update([(f"subguilds.$.members.{ID}", "") for ID in holder])
                    
                    if to_unset != {}:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id, "subguilds.name": guild_name},
                            {"$unset": to_unset}
                        )
                    reply = discord.Embed(
                        title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–ò–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}** –∏—Å–∫–ª—é—á–µ–Ω–æ {len(holder)} —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤)",
                        color = discord.Color.dark_green()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

                    if subguild["role_id"] != None:
                        for ID in holder:
                            client.loop.create_task(remove_join_role(get_member(ctx.guild, ID), subguild["role_id"]))
                
                await ctx.send(embed = reply)

            elif parameter == "last":
                if not value.isdigit() or "-" in value:
                    reply = discord.Embed(
                        title = "üí¢ –£–ø—Å",
                        description = f"–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º\n–í—ã –≤–≤–µ–ª–∏: {value}",
                        color = discord.Color.dark_red()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                else:
                    value = int(value)

                    memb_data = subguild["members"]
                    pairs = []
                    for key in memb_data:
                        memb = memb_data[key]
                        if memb["id"] != subguild["leader_id"]:
                            pairs.append((memb["id"], memb["messages"]))
                    del memb_data

                    pairs.sort(key=lambda i: i[1], reverse=True)
                    
                    length = len(pairs)
                    segment = min(value, length)

                    pairs = pairs[length - segment: length]

                    to_unset = {}
                    to_unset.update([(f"subguilds.$.members.{pair[0]}", "") for pair in pairs])
                    
                    if to_unset != {}:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id, "subguilds.name": guild_name},
                            {"$unset": to_unset}
                        )
                    reply = discord.Embed(
                        title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–ò–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}** –∏—Å–∫–ª—é—á–µ–Ω–æ {segment} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤)",
                        color = discord.Color.dark_green()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

                    if subguild["role_id"] != None:
                        for pair in pairs:
                            ID = pair[0]
                            client.loop.create_task(remove_join_role(get_member(ctx.guild, ID), subguild["role_id"]))
                
                await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["ping-count", "pingcount", "pc"])
async def ping_count(ctx, u_search):
    collection = db["subguilds"]
    user = detect.member(ctx.guild, u_search)

    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
    
    elif u_search.lower() == "delete":
        collection.find_one_and_update(
            {"_id": ctx.guild.id},
            {
                "$set": {
                    "mentioner_id": None
                }
            }
        )
        reply = discord.Embed(
            title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
            description = "–ë–æ–ª—å—à–µ –Ω–µ –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            color = discord.Color.green()
        )

    elif user == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–í—ã –≤–≤–µ–ª–∏ {u_search}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
            color = discord.Color.darker_grey()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

    else:
        collection.find_one_and_update(
            {"_id": ctx.guild.id},
            {
                "$set": {
                    "mentioner_id": user.id
                }
            },
            upsert=True
        )
        reply = discord.Embed(
            title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
            description = f"–¢–µ–ø–µ—Ä—å –≤ –≥–∏–ª—å–¥–∏—è—Ö –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç –ø–∏–Ω–≥–æ–≤ –æ—Ç **{user}**",
            color = discord.Color.green()
        )
    await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["reset-guilds", "resetguilds", "rg"])
async def reset_guilds(ctx, parameter):
    collection = db["subguilds"]
    params = ["messages", "mentions"]
    parameter = parameter.lower()

    if not has_permissions(ctx.author, ["administrator"]):
        reply = discord.Embed(
            title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            description = (
                "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            ),
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
    
    elif parameter not in params:
        reply = discord.Embed(
            title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
            description = (
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                "> `messages`\n"
                "> `mentions`\n"
                f"–ù–∞–ø—Ä–∏–º–µ—Ä `{prefix}reset-guilds messages`"
            ),
            color = discord.Color.dark_grey()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

    elif parameter == "mentions":
        collection.find_one_and_update(
            {"_id": ctx.guild.id},
            {
                "$set": {"subguilds.$[].mentions": 0}
            }
        )
        reply = discord.Embed(
            title = "‚ôª –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
            description = "–°–±—Ä–æ—Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞–∫–æ–Ω—á–µ–Ω",
            color = discord.Color.green()
        )
    elif parameter == "messages":
        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection = {"subguilds.name": True, "subguilds.members": True}
        )
        if result != None:
            for sg in result["subguilds"]:
                zero_data = {}
                zero_data.update([
                    (f"subguilds.$.members.{key}", {"id": int(key), "messages": 0}) for key in sg["members"]])
                if zero_data != {}:
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": sg["name"]},
                        {"$set": zero_data}
                    )
        reply = discord.Embed(
            title = "‚ôª –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
            description = "–°–±—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–∫–æ–Ω—á–µ–Ω",
            color = discord.Color.green()
        )
    
    await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["count-roles", "countroles", "cr"])
async def count_roles(ctx, *, text_data):
    collection = db["subguilds"]

    guild_name, text = sep_args(text_data)
    raw_roles = c_split(text)
    
    result = collection.find_one(
        {"_id": ctx.guild.id, "subguilds.name": guild_name},
        projection={
            "master_role_id": True,
            "subguilds.name": True,
            "subguilds.members": True,
            "subguilds.leader_id": True,
            "subguilds.helper_id": True
        }
    )
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    
    else:
        mr_id = None
        if "master_role_id" in result:
            mr_id = result["master_role_id"]
        
        subguild = get_subguild(result, guild_name)
        del result

        if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                    f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                    "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = discord.Color.dark_red()
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            roles = [detect.role(ctx.guild, s) for s in raw_roles]
            if None in roles or roles == []:
                reply = discord.Embed(
                    title = f"üí¢ –û—à–∏–±–∫–∞",
                    description = (
                        f"–í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–æ–ª–µ–π —É–∫–∞–∂–∏—Ç–µ –∏—Ö **@–£–ø–æ–º–∏–Ω–∞–Ω–∏—è** –∏–ª–∏ **ID**\n"
                        f'**–ü—Ä–∏–º–µ—Ä:** `{prefix}count-roles "{guild_name}" {ctx.guild.default_role.id}`'
                    )
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                pairs = [[r, 0] for r in roles]
                for key in subguild["members"]:
                    memb = subguild["members"][key]
                    member = ctx.guild.get_member(memb["id"])
                    if member != None:
                        for i in range(len(pairs)):
                            role = pairs[i][0]
                            if role in member.roles:
                                pairs[i][1] += 1
                del subguild

                pairs.sort(key=lambda i: i[1])
                desc = ""
                for pair in pairs:
                    desc += f"<@&{pair[0].id}> ‚Ä¢ {pair[1]} üë•\n"

                reply = discord.Embed(
                    title = guild_name,
                    description = (
                        f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–ª–µ–π:**\n"
                        f"{desc}"
                    ),
                    color = discord.Color.teal()
                )
                await ctx.send(embed = reply)

@commands.cooldown(1, 30, commands.BucketType.member)
@client.command(aliases = ["join-guild", "joinguild", "jg", "join"])
async def join_guild(ctx, *, guild_name):
    collection = db["subguilds"]

    result = collection.find_one(
        {
            "_id": ctx.guild.id,
            "subguilds.name": guild_name
        },
        projection={
            "subguilds.requests": False
        }
    )
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = (
                f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{prefix}guilds`"
            ),
            color = discord.Color.dark_red()
        )
        await ctx.send(embed = reply)
    else:
        m_lim = member_limit
        if "member_limit" in result:
            m_lim = result["member_limit"]

        subguild = get_subguild(result, guild_name)
        guild_role_id = subguild["role_id"]
        private = subguild["private"]
        total_memb = len(subguild["members"])

        if total_memb >= m_lim:
            reply = discord.Embed(
                title = "üõ† –ì–∏–ª—å–¥–∏—è –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∞",
                description = f"–í —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - {m_lim}",
                color = discord.Color.from_rgb(145, 74, 2)
            )
            reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            result = result["subguilds"]
            user_guild = None
            for sg in result:
                if f"{ctx.author.id}" in sg["members"]:
                    user_guild = sg["name"]
                    break
            del result

            if guild_name == user_guild:
                reply = discord.Embed(
                    title = "‚ùå –û—à–∏–±–∫–∞",
                    description = f"–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ **{guild_name}**",
                    color = discord.Color.dark_red()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif user_guild != None:
                reply = discord.Embed(
                    title = "üõ† –û —Å–º–µ–Ω–µ –≥–∏–ª—å–¥–∏–π",
                    description = (
                        f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ **{user_guild}**.\n"
                        f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –¥—Ä—É–≥—É—é –≥–∏–ª—å–¥–∏—é, –í–∞–º –Ω—É–∂–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π, –æ–¥–Ω–∞–∫–æ, **–Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ**:\n"
                        f"**->** –°—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ.\n"
                        f"–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞: `{prefix}leave-guild`"
                    ),
                    color = discord.Color.from_rgb(40, 40, 40)
                )
                reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                if private and ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]]:
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$addToSet": {"subguilds.$.requests": ctx.author.id}},
                        upsert=True
                    )
                    reply = discord.Embed(
                        title = "‚è≥ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥–ª–∞–≤–µ",
                        description = (
                            f"–≠—Ç–æ –∑–∞–∫—Ä—ã—Ç–∞—è –≥–∏–ª—å–¥–∏—è. –í—ã —Å—Ç–∞–Ω–µ—Ç–µ –µ—ë —É—á–∞—Å—Ç–Ω–∏–∫–æ–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –µ—ë –≥–ª–∞–≤–∞ –ø—Ä–∏–º–µ—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É"
                        ),
                        color = discord.Color.dark_gold()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)

                    log = discord.Embed(
                        description = (
                            "–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                            f"**–í –≥–∏–ª—å–¥–∏—é:** {guild_name}\n"
                            f"**–° —Å–µ—Ä–≤–µ—Ä–∞:** {ctx.guild.name}\n"
                            f"**–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã:** `{prefix}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ {guild_name}`\n"
                            f"**–í–∞–∂–Ω–æ:** –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ"
                        )
                    )
                    log.set_author(name = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                    if subguild["leader_id"] != None:
                        leader = client.get_user(subguild["leader_id"])
                        client.loop.create_task(knock_dm(leader, ctx.channel, log))
                    if subguild["helper_id"] != None:
                        helper = client.get_user(subguild["helper_id"])
                        client.loop.create_task(knock_dm(helper, ctx.channel, log))

                else:

                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {
                            "$set": {
                                f"subguilds.$.members.{ctx.author.id}": {
                                    "id": ctx.author.id,
                                    "messages": 0
                                }
                            }
                        }
                    )
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.requests": {
                            "$elemMatch": {"$eq": ctx.author.id}
                        }},
                        {"$pull": {"subguilds.$.requests": ctx.author.id}}
                    )

                    await give_join_role(ctx.author, guild_role_id)

                    reply = discord.Embed(
                        title = "‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å",
                        description = (
                            f"–í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –≥–∏–ª—å–¥–∏—é **{guild_name}**\n"
                            f"-> –ü—Ä–æ—Ñ–∏–ª—å –≥–∏–ª—å–¥–∏–∏: `{prefix}guild-info {guild_name}`"
                        ),
                        color = discord.Color.green()
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)

@commands.cooldown(1, 30, commands.BucketType.member)
@client.command(aliases = ["leave-guild", "leaveguild", "lg", "leave"])
async def leave_guild(ctx):
    collection = db["subguilds"]

    result = collection.find_one(
        {
            "_id": ctx.guild.id,
            f"subguilds.members.{ctx.author.id}.id": ctx.author.id
        },
        projection={"subguilds.name": True, "subguilds.members": True, "subguilds.role_id": True}
    )
    if result == None:
        reply = discord.Embed(
            title = "‚ùå –û—à–∏–±–∫–∞",
            description = f"–í–∞—Å –Ω–µ—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π –≥–∏–ª—å–¥–∏–∏",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)
    else:
        result = result["subguilds"]
        for subguild in result:
            if f"{ctx.author.id}" in subguild["members"]:
                guild_name = subguild["name"]
                guild_role_id = subguild["role_id"]
                break
        del result

        no = ["no", "0", "–Ω–µ—Ç"]
        yes = ["yes", "1", "–¥–∞"]

        warn_emb = discord.Embed(
            title = "üõ† –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            description = (
                f"**->** –í–∞—à —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±–Ω—É–ª–∏—Ç—Å—è, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –í—ã –ø–æ–∫–∏–Ω–µ—Ç–µ –≥–∏–ª—å–¥–∏—é **{guild_name}**.\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ `–¥–∞` –∏–ª–∏ `–Ω–µ—Ç`"
            )
        )
        warn_emb.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        warn = await ctx.send(embed = warn_emb)

        msg = await read_message(ctx.channel, ctx.author, 60)
        await warn.delete()

        if msg != "Timeout":
            user_reply = msg.content.lower()
            if user_reply in no:
                await ctx.send("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            elif user_reply in yes:
                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        "$unset": {
                            f"subguilds.$.members.{ctx.author.id}": ""
                        }
                    }
                )
                await remove_join_role(ctx.author, guild_role_id)
                reply = discord.Embed(
                    title = "üö™ –í—ã—Ö–æ–¥",
                    description = f"–í—ã –≤—ã—à–ª–∏ –∏–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}**"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

@commands.cooldown(1, 10, commands.BucketType.member)
@client.command(aliases = ["top"])
async def guilds(ctx, filtration = "messages", *, extra = "–ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É"):
    collection = db["subguilds"]
    filters = {
        "messages": "`üí¨`",
        "mentions": "üìØ",
        "members": "üë•",
        "roles": "üéó",
        "reputation": "üîÖ"
    }
    filtration = filtration.lower()

    result = collection.find_one({"_id": ctx.guild.id})
    role = detect.role(ctx.guild, extra)

    if not filtration in filters:
        reply = discord.Embed(
            title = "üí¢ –û—à–∏–±–∫–∞",
            description = (
                f"–ù–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞ `{filtration}`\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:\n"
                "> messages\n"
                "> mentions\n"
                "> members\n"
                "> roles\n"
                f"–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ `{prefix}guilds`"
            )
        )
        await ctx.send(embed = reply)
    elif filtration == "roles" and role == None:
        reply = discord.Embed(
            title = "üí¢ –û—à–∏–±–∫–∞",
            description = f"–í—ã –≤–≤–µ–ª–∏ {extra}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
            color = discord.Color.dark_red()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

    elif result == None:
        lb = discord.Embed(
            title = f"–ì–∏–ª—å–¥–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.name}",
            description = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç",
            color = discord.Color.blue()
        )
        lb.set_thumbnail(url = f"{ctx.guild.icon_url}")
        await ctx.send(embed = lb)
    else:
        subguilds = result["subguilds"]

        stats = []
        for subguild in subguilds:
            if filtration == "messages":
                desc = "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π"
                total = 0
                for str_id in subguild["members"]:
                    memb = subguild["members"][str_id]
                    total += memb["messages"]
            elif filtration == "roles":
                desc = f"–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∏–º–µ—é—â–∏—Ö —Ä–æ–ª—å <@&{role.id}>"
                total = 0
                for key in subguild["members"]:
                    memb = subguild["members"][key]
                    member = ctx.guild.get_member(memb["id"])
                    if member != None and role in member.roles:
                        total += 1
            elif filtration == "mentions":
                desc = "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É–ø–æ–º–∏–Ω–∞–Ω–∏–π"
                total = subguild["mentions"]
            elif filtration == "members":
                desc = "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
                total = len(subguild["members"])
            elif filtration == "reputation":
                desc = "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏"
                total = subguild["reputation"]

            pair = (f"{subguild['name']}", total)
            stats.append(pair)
        del result
        stats.sort(key=lambda i: i[1])
        stats.reverse()

        table = ""
        for i in range(len(stats)):
            guild_name = f_username(stats[i][0])
            total = stats[i][1]
            table += f"**{i+1})** {guild_name} ‚Ä¢ **{total}** {filters[filtration]}\n"
        
        lb = discord.Embed(
            title = f"–ì–∏–ª—å–¥–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.name}",
            description = f"{desc}\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≥–∏–ª—å–¥–∏–∏: `{prefix}guild-info –ù–∞–∑–≤–∞–Ω–∏–µ`\n\n{table}",
            color = discord.Color.dark_blue()
        )
        lb.set_thumbnail(url = f"{ctx.guild.icon_url}")
        await ctx.send(embed = lb)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["guild-info", "guildinfo", "gi"])
async def guild_info(ctx, *, guild_name):
    collection = db["subguilds"]

    result = collection.find_one({"_id": ctx.guild.id, "subguilds.name": guild_name})
    if result == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = (
                f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{prefix}guilds`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        await ctx.send(embed = reply)
    else:
        subguild = get_subguild(result, guild_name)
        del result

        total_mes = 0
        total_memb = 0
        for str_id in subguild["members"]:
            memb = subguild["members"][str_id]
            total_mes += memb["messages"]
            total_memb += 1
        subguild["members"] = None
        
        reply = discord.Embed(
            title = subguild["name"],
            description = (
                f"{subguild['description']}\n"
                f"**->** –¢–æ–ø 10 –≥–∏–ª—å–¥–∏–∏: `{prefix}guild-top 1 {guild_name}`"
            ),
            color = discord.Color.green()
        )
        reply.set_thumbnail(url = subguild["avatar_url"])
        if subguild['leader_id'] != None:
            leader = client.get_user(subguild["leader_id"])
            reply.add_field(name = "üí† –í–ª–∞–¥–µ–ª–µ—Ü", value = f"> {f_username(leader)}", inline=False)
        if subguild['helper_id'] != None:
            helper = client.get_user(subguild["helper_id"])
            reply.add_field(name = "üî∞ –ü–æ–º–æ—â–Ω–∏–∫", value = f"> {f_username(helper)}", inline=False)
        reply.add_field(name = "üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value = f"> {total_memb}", inline=False)
        reply.add_field(name = "`üí¨` –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π", value = f"> {total_mes}", inline=False)
        reply.add_field(name = "üîÖ –†–µ–ø—É—Ç–∞—Ü–∏—è", value = f"> {subguild['reputation']}", inline=False)
        if subguild["mentions"] > 0:
            reply.add_field(name = "üìØ –£–ø–æ–º–∏–Ω–∞–Ω–∏–π", value = f"> {subguild['mentions']}", inline=False)
        if subguild["role_id"] != None:
            reply.add_field(name = "üéó –†–æ–ª—å", value = f"> <@&{subguild['role_id']}>", inline=False)
        if subguild["private"]:
            reply.add_field(name = "üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", value = "> –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–∞–º")
        await ctx.send(embed = reply)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["guild-members", "guildmembers", "gm", "guild-top", "gt"])
async def guild_members(ctx, page_num, *, guild_name):
    collection = db["subguilds"]
    interval = 15

    if not page_num.isdigit():
        reply = discord.Embed(
            title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
            description = (
                f"**{page_num}** –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º\n"
                f"–ö–æ–º–∞–Ω–¥–∞: `{prefix}{ctx.command.name} –ù–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã –ì–∏–ª—å–¥–∏—è`"
            )
        )
        await ctx.send(embed = reply)
    else:
        page_num = int(page_num)

        result = collection.find_one(
            {"_id": ctx.guild.id, "subguilds.name": guild_name},
            projection={"subguilds.name": True, "subguilds.members": True}
        )
        if result == None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = (
                    f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                    f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{prefix}guilds`"
                ),
                color = discord.Color.from_rgb(40, 40, 40)
            )
            await ctx.send(embed = reply)
        else:
            subguild = get_subguild(result, guild_name)
            del result

            members = subguild["members"]
            total_memb = len(members)
            if interval*(page_num - 1) >= total_memb:
                reply = discord.Embed(
                    title = "üí¢ –£–ø—Å",
                    description = f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: **{(total_memb - 1)//interval + 1}**"
                )
                await ctx.send(embed = reply)
            else:
                pairs = []
                for key in members:
                    member = members[key]
                    pairs.append((member["id"], member["messages"]))
                pairs.sort(key=lambda i: i[1], reverse=True)

                last_num = min(total_memb, interval*page_num)
                
                desc = ""
                for i in range(interval*(page_num-1), last_num):
                    pair = pairs[i]
                    user = get_member(ctx.guild, pair[0])
                    desc += f"**{i + 1})** {f_username(user)} ‚Ä¢ {pair[1]} `üí¨`\n"
                
                lb = discord.Embed(
                    title = f"üîé –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥–∏–ª—å–¥–∏–∏ {guild_name}",
                    description = desc,
                    color = discord.Color.green()
                )
                lb.set_footer(text=f"–°—Ç—Ä. {page_num}/{(total_memb - 1)//interval + 1}")
                await ctx.send(embed = lb)

@commands.cooldown(1, 5, commands.BucketType.member)
@client.command(aliases = ["user-guild", "userguild", "ug", "user-info", "userinfo", "ui"])
async def user_guild(ctx, user_s = None):
    if user_s == None:
        user = ctx.author
    else:
        user = detect.member(ctx.guild, user_s)
    if user == None:
        reply = discord.Embed(
            title = "üí¢ –£–ø—Å",
            description = f"–í—ã –≤–≤–µ–ª–∏ {user_s}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
        )
        await ctx.send(embed = reply)
    else:
        collection = db["subguilds"]
        result = collection.find_one(
            {"_id": ctx.guild.id, f"subguilds.members.{user.id}.id": user.id},
            projection={"subguilds.requests": False}
        )
        if result == None:
            reply = discord.Embed(
                title = f"üõ† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥–∏–ª—å–¥–∏–∏",
                description = f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π –∑–¥–µ—Å—å: `{prefix}guilds`",
            )
            reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            for sg in result["subguilds"]:
                if f"{user.id}" in sg["members"]:
                    subguild = sg
                    break
            del result

            user_mes = subguild["members"][f"{user.id}"]["messages"]
            pairs = [(int(ID), subguild["members"][ID]["messages"]) for ID in subguild["members"]]
            subguild["members"] = {}
            pairs.sort(key=lambda i: i[1], reverse=True)

            place = pairs.index((user.id, user_mes)) + 1

            stat_emb = discord.Embed(color = discord.Color.blue())
            stat_emb.add_field(name="üõ° –ì–∏–ª—å–¥–∏—è", value=f_username(subguild['name']), inline = False)
            stat_emb.add_field(name="`üí¨` –ù–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π", value=f"{user_mes}", inline = False)
            stat_emb.add_field(name="üèÖ –ú–µ—Å—Ç–æ", value=f"{place} / {len(pairs)}", inline = False)
            stat_emb.set_author(name = f"–ü—Ä–æ—Ñ–∏–ª—å üîé {user}", icon_url = f"{user.avatar_url}")
            stat_emb.set_thumbnail(url = subguild["avatar_url"])
            await ctx.send(embed = stat_emb)

#========Events========
@client.event
async def on_message(message):
    if message.guild != None:
        collection = db["cmd_channels"]
        result = collection.find_one({"_id": message.guild.id})
        if result == None:
            wl_channels = [message.channel.id]
        elif result["channels"] == None:
            wl_channels = [message.channel.id]
        else:
            wl_channels = result["channels"]
        
        if message.channel.id in wl_channels:
            await client.process_commands(message)
        
        collection = db["subguilds"]

        if not message.author.bot:
            collection.find_one_and_update(
                {
                    "_id": message.guild.id,
                    f"subguilds.members.{message.author.id}.id": message.author.id
                    },
                {
                    "$inc": {
                        f"subguilds.$.members.{message.author.id}.messages": 1
                    }
                }
            )
        
        members = message.mentions
        if members != []:
            search = {}
            search.update([
                ("_id", message.guild.id),
                ("mentioner_id", message.author.id)
            ])
            key_words = [f"subguilds.members.{m.id}.id" for m in members]
            search.update([(key_words[i], members[i].id) for i in range(len(key_words))])
            del members
            
            proj = {"subguilds.name": True}
            proj.update([(kw, True) for kw in key_words])

            result = collection.find_one(
                search,
                projection=proj
            )
            
            if result != None:
                subguilds = result["subguilds"]
                for sg in subguilds:
                    collection.find_one_and_update(
                        {"_id": message.guild.id,
                        "subguilds.name": sg["name"]},
                        {"$inc": {"subguilds.$.mentions": len(sg["members"])}}
                    )

#========Errors==========
@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        
        def TimeExpand(time):
            if time//60 > 0:
                return str(time//60)+'–º–∏–Ω. '+str(time%60)+' —Å–µ–∫.'
            else:
                return str(time)+' —Å–µ–∫.'
        
        cool_notify = discord.Embed(
                title='‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ',
                description = f"–û—Å—Ç–∞–ª–æ—Å—å {TimeExpand(int(error.retry_after))}"
            )
        await ctx.send(embed=cool_notify)
#====Exact errors=====
@create_guild.error
async def create_guild_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üõ† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏]`\n"
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} –î–∞–º—ã –∏ –≥–æ—Å–ø–æ–¥–∞`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@edit_guild.error
async def edit_guild_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö",
            description = (
                "> `name`\n"
                "> `description`\n"
                "> `avatar`\n"
                "> `leader`\n"
                "> `helper`\n"
                "> `role`\n"
                "> `privacy`\n"
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ü–∞—Ä–∞–º–µ—Ç—Ä [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏] –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`\n'
                f'**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} name [–î–∞–º—ã –∏ –≥–æ—Å–ø–æ–¥–∞] –•—Ä–∞–Ω–∏—Ç–µ–ª–∏`\n'
                f'**–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö:**\n'
                f"`{prefix}{ctx.command.name} name`\n"
                f"`{prefix}{ctx.command.name} description`\n"
                f"`{prefix}{ctx.command.name} ...`\n"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@join_guild.error
async def join_guild_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@delete_guild.error
async def delete_guild_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@guild_info.error
async def guild_info_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@guild_members.error
async def guild_members_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@ping_count.error
async def ping_count_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@reset_guilds.error
async def reset_guilds_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} messages –∏–ª–∏ mentions`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@count_roles.error
async def count_roles_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} [–ì–∏–ª—å–¥–∏—è] @—Ä–æ–ª—å1 @—Ä–æ–ª—å2 ...`'
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@cmd_channels.error
async def cmd_channels_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} #–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...`\n'
                f"**–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:** `{prefix}{ctx.command.name} delete`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@requests.error
async def requests_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`\n'
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} 1 –ú–æ—è –≥–∏–ª—å–¥–∏—è`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@accept.error
async def accept_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è`\n'
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} 1 –ú–æ—è –≥–∏–ª—å–¥–∏—è`\n"
                f"**–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:** `{prefix}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@decline.error
async def decline_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è`\n'
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} 1 –ú–æ—è –≥–∏–ª—å–¥–∏—è`\n"
                f"**–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:** `{prefix}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@kick.error
async def kick_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ü–∞—Ä–∞–º–µ—Ç—Ä –ó–Ω–∞—á–µ–Ω–∏–µ –ì–∏–ª—å–¥–∏—è`\n'
                "**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n"
                "> `user`\n"
                "> `under`\n"
                "> `last`\n"
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} user @–£—á–∞—Å—Ç–Ω–∏–∫ –ú–æ—è –≥–∏–ª—å–¥–∏—è`\n"
                f"**–ü–æ–¥—Ä–æ–±–Ω–µ–µ:** `{prefix}{ctx.command.name} user (–∏–ª–∏ under –∏ last)`"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@reputation.error
async def reputation_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ü–∞—Ä–∞–º–µ—Ç—Ä –ß–∏—Å–ª–æ [–ì–∏–ª—å–¥–∏—è] –ü—Ä–∏—á–∏–Ω–∞`\n'
                "**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n"
                "> `change`\n"
                "> `set`\n"
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} change 10 –ì–∏–ª—å–¥–∏—è –£—á–∞—Å—Ç–Ω–∏–∫ –±—ã–ª –Ω–∞–∫–∞–∑–∞–Ω`\n"
                "**–ü–æ–¥—Ä–æ–±–Ω–µ–µ:**\n"
                f"`{prefix}{ctx.command.name} change`\n"
                f"`{prefix}{ctx.command.name} set`\n"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

@members_limit.error
async def members_limit_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        reply = discord.Embed(
            title = "üìë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description = (
                f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{prefix}{ctx.command.name} –ß–∏—Å–ª–æ`\n'
                f"**–ü—Ä–∏–º–µ—Ä:** `{prefix}{ctx.command.name} 50`\n"
            ),
            color = discord.Color.from_rgb(40, 40, 40)
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed = reply)

async def change_status():
    await client.wait_until_ready()
    await client.change_presence(activity=discord.Game(f"{prefix}help"))
client.loop.create_task(change_status())

client.run(token)
