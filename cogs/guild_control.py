import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import os, datetime

import pymongo
from pymongo import MongoClient

app_string = str(os.environ.get("cluster_app_string"))
cluster = MongoClient(app_string)
db = cluster["guild_data"]

#---------- Variables ------------
from functions import guild_limit, default_avatar_url

p = "."
param_desc = {
    "name": {
        "usage": f'`{p}edit-guild name [–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ] –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ`',
        "example": f'`{p}edit-guild name [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –õ—É—á—à–∞—è –≥–∏–ª—å–¥–∏—è`'
    },
    "description": {
        "usage": f'`{p}edit-guild description [–ì–∏–ª—å–¥–∏—è] –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ`',
        "example": f'`{p}edit-guild description [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –æ–±—â–∞—Ç—å—Å—è`'
    },
    "avatar_url": {
        "usage": f'`{p}edit-guild avatar [–ì–∏–ª—å–¥–∏—è] –°—Å—ã–ª–∫–∞`',
        "example": f'`{p}edit-guild avatar [–ú–æ—è –≥–∏–ª—å–¥–∏—è] https://discordapp.com/.../image.png`'
    },
    "leader_id": {
        "usage": f'`{p}edit-guild leader [–ì–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`',
        "example": f'`{p}edit-guild leader [–ú–æ—è –≥–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`'
    },
    "helper_id": {
        "usage": f'`{p}edit-guild helper [–ì–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`',
        "example": f'`{p}edit-guild helper [–ú–æ—è –≥–∏–ª—å–¥–∏—è] @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`'
    },
    "role_id": {
        "usage": f'`{p}edit-guild role [–ì–∏–ª—å–¥–∏—è] @–†–æ–ª—å (–∏–ª–∏ delete)`',
        "example": f'`{p}edit-guild role [–ú–æ—è –≥–∏–ª—å–¥–∏—è] delete`'
    },
    "private": {
        "usage": f'`{p}edit-guild privacy [–ì–∏–ª—å–¥–∏—è] on / off`',
        "example": f'`{p}edit-guild privacy [–ú–æ—è –≥–∏–ª—å–¥–∏—è] on`'
    }
}

#---------- Functions ------------
from functions import has_roles, has_permissions, get_field, detect, find_alias, carve_int, search_and_choose

# Other
def anf(user):
    line = f"{user}"
    fsymbs = ">`*_~|"
    out = ""
    for s in line:
        if s in fsymbs:
            out += f"\\{s}"
        else:
            out += s
    return out

def add_sign(Int):
    if str(Int)[0] == "-":
        return str(Int)
    else:
        return f"+{Int}"

def is_int(string):
    out = True
    try:
        int(string)
    except ValueError:
        out = False
    return out

def sep_args(text):
    text += " "
    if text[0] != "[":
        i = text.find(" ")
        return (text[:+i], text[+i:].strip())
    else:
        bal = 0
        sep = len(text) - 1
        for i in range(len(text)):
            s = text[i]
            if s == "[":
                bal += 1
            elif s == "]":
                bal -= 1
            if bal == 0:
                sep = i
                break
        return (text[1:sep], text[+sep+1:].strip())

def role_gte(role, member):
    return member.id != member.guild.owner_id and role.position >= member.top_role.position

def image_link(string):
    return string.startswith("https://")

def mmorpg_col(col_name):
    colors = {
        "paper": discord.Color.from_rgb(163, 139, 101),
        "canopy": discord.Color.from_rgb(120, 55, 55),
        "sky": discord.Color.from_rgb(131, 171, 198),
        "clover": discord.Color.from_rgb(59, 160, 113),
        "vinous": discord.Color.from_rgb(135, 20, 20),
        "lilac": discord.Color.from_rgb(120, 100, 153),
        "pancake": discord.Color.from_rgb(211, 150, 65)
    }
    return colors[col_name]

def get_subguild(collection_part, subguild_sign):
    out = None
    if collection_part != None and "subguilds" in collection_part:
        user_id_given = "int" in f"{type(subguild_sign)}".lower()

        subguilds = collection_part["subguilds"]
        for subguild in subguilds:
            if user_id_given:
                if f"{subguild_sign}" in subguild["members"]:
                    out = subguild
                    break
            else:
                if subguild["name"] == subguild_sign:
                    out = subguild
                    break
    return out

async def give_join_role(member, role_id):
    if role_id is not None and member is not None:
        role = discord.utils.get(member.guild.roles, id=role_id)
        if role != None and role not in member.roles:
            try:
                await member.add_roles(role)
            except Exception:
                pass
    return

async def remove_join_role(member, role_id):
    if role_id is not None and member is not None:
        role = discord.utils.get(member.guild.roles, id=role_id)
        if role is not None and role in member.roles:
            try:
                await member.remove_roles(role)
            except Exception:
                pass
    return

async def post_log(guild, channel_id, log):
    if channel_id is not None:
        channel = guild.get_channel(channel_id)
        if channel is not None:
            await channel.send(embed=log)

#------------ Cog ----------
class guild_control(commands.Cog):
    def __init__(self, client):
        self.client = client

    #---------- Events -----------
    @commands.Cog.listener()
    async def on_ready(self):
        print(">> Guild controller cog is loaded")
    
    #---------- Commands ----------
    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["rep"])
    async def reputation(self, ctx, param, value=None, *, text_data=None):
        pr = ctx.prefix
        param = param.lower()
        params = {
            "change": {
                "usage": f"`{pr}rep change –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
                "example": f"`{pr}rep change 10 –ì–∏–ª—å–¥–∏—è`",
                "info": "–ò–∑–º–µ–Ω—è–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≥–∏–ª—å–¥–∏–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –æ—á–∫–æ–≤",
                "log": "–ò–∑–º–µ–Ω–µ–Ω–æ"
            },
            "set": {
                "usage": f"`{pr}rep set –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
                "example": f"`{pr}rep set 70 –ì–∏–ª—å–¥–∏—è`",
                "info": "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É –≥–∏–ª—å–¥–∏–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é",
                "log": "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
            }
        }

        if not param in params:
            reply = discord.Embed(
                title = "üìë –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
                description = (
                    f"–í—ã –≤–≤–µ–ª–∏: `{param}`\n"
                    f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                    f"> `{pr}rep change`\n"
                    f"> `{pr}rep set`\n"
                    f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ: `{pr}rep`"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif value is None or text_data is None:
            param_desc = params[param]
            reply = discord.Embed(
                title = f"‚ùì {pr}rep {param}",
                description = (
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {param_desc['usage']}\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** {param_desc['example']}\n"
                    f"-> {param_desc['info']}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif not is_int(value):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ—Ç–Ω",
                description = f"–í—Ö–æ–¥–Ω–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç {value} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            collection = db["subguilds"]
            guild_name, text = sep_args(text_data)
            if text == "":
                text = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
            
            # GoT event: guild_name check-for-night-watch
            if guild_name.lower() == "–Ω–æ—á–Ω–æ–π –¥–æ–∑–æ—Ä":
                query = {"_id": ctx.guild.id, "night_watch": {"$exists": True}}
                result = collection.find_one(
                    query,
                    projection={
                        "master_role_id": True,
                        "log_channel": True
                    }
                )
                update_pair = {"night_watch.reputation": int(value)}

            else:
                result = collection.find_one(
                    {"_id": ctx.guild.id},
                    projection={
                        "subguilds.name": True,
                        "master_role_id": True,
                        "log_channel": True
                    }
                )
                if "subguilds" not in result:
                    guild_name = None
                else:
                    guild_name = await search_and_choose(result["subguilds"], guild_name, ctx.message, ctx.prefix, self.client)
                
                if guild_name is None:
                    reply = discord.Embed(
                        title = "üí¢ –£–ø—Å",
                        description = (
                            f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                            f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{pr}guilds`"
                        ),
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)
                elif guild_name == 1337:
                    guild_name = None
                else:
                    query = {"_id": ctx.guild.id, "subguilds.name": guild_name}
                    update_pair = {"subguilds.$.reputation": int(value)}
            # ----------
            
            if guild_name is not None:
                lc_id = result.get("log_channel")
                mr_id = result.get("master_role_id")
                
                if not has_roles(ctx.author, [mr_id]) and not has_permissions(ctx.author, ["administrator"]):
                    reply = discord.Embed(
                        title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                        description = (
                            "**–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:**\n"
                            "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                            "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π"
                        ),
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)

                else:
                    if param == "change":
                        changes = add_sign(int(value))
                        to_update = {"$inc": update_pair}
                    elif param == "set":
                        changes = f"—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {int(value)}"
                        to_update = {"$set": update_pair}
                    
                    collection.find_one_and_update(
                        query,
                        to_update,
                        upsert=True
                    )

                    reply = discord.Embed(
                        title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–†–µ–ø—É—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞.",
                        color = mmorpg_col("clover")
                    )
                    await ctx.send(embed = reply)

                    log = discord.Embed(
                        title="üîÖ –ò–∑–º–µ–Ω–µ–Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è",
                        description=(
                            f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {ctx.author}\n"
                            f"**–ì–∏–ª—å–¥–∏—è:** {guild_name}\n"
                            f"**–î–µ–π—Å—Ç–≤–∏–µ:** {changes}\n"
                            f"**–ü—Ä–∏—á–∏–Ω–∞:** {text}"
                        ),
                        color=mmorpg_col("pancake")
                    )
                    await post_log(ctx.guild, lc_id, log)

    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.command(aliases = ["create-guild", "createguild", "cg"])
    async def create_guild(self, ctx, *, guild_name):
        pr = ctx.prefix
        collection = db["subguilds"]
        guild_name = guild_name[:+30].replace("[", "")
        guild_name = guild_name.replace("]", "")

        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection={
                "_id": True,
                "subguilds.name": True,
                "master_role_id": True,
                "creator_role": True,
                "log_channel": True
            }
        )
        lc_id = get_field(result, "log_channel")
        mr_id = get_field(result, "master_role_id")
        cr_id = get_field(result, "creator_role")

        if not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]) and not has_roles(ctx.author, [cr_id]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                    "–ò–ª–∏ –∏–º–µ—Ç—å –æ–¥–Ω—É –∏–∑ —Ä–æ–ª–µ–π\n"
                    f"> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                    f"> –°–æ–∑–¥–∞—Ç–µ–ª—å –≥–∏–ª—å–¥–∏–π"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        else:
            total_guilds = 0
            if result != None and "subguilds" in result:
                total_guilds = len(result["subguilds"])

            if total_guilds >= guild_limit:
                reply = discord.Embed(
                    title = "üõ† –ú–∞–∫—Å–∏–º—É–º –≥–∏–ª—å–¥–∏–π",
                    description = (
                        f"–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –≥–∏–ª—å–¥–∏–π - {guild_limit}\n"
                        f"–£–¥–∞–ª–∏—Ç—å –≥–∏–ª—å–¥–∏—é: `{pr}delete-guild –ì–∏–ª—å–¥–∏—è`"
                    ),
                    color = discord.Color.dark_orange()
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                subguild = get_subguild(result, guild_name)
                if subguild != None:
                    reply = discord.Embed(
                        title = "‚ö† –û—à–∏–±–∫–∞",
                        description = f"–ì–∏–ª—å–¥–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}** —É–∂–µ –µ—Å—Ç—å –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ",
                        color = discord.Color.dark_gold()
                    )
                    await ctx.send(embed = reply)
                
                else:
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id},
                        {
                            "$addToSet": {
                                "subguilds": {
                                    "name": guild_name,
                                    "description": "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è",
                                    "avatar_url": default_avatar_url,
                                    "leader_id": ctx.author.id,
                                    "helper_id": None,
                                    "role_id": None,
                                    "private": False,
                                    "requests": [],
                                    "reputation": 100,
                                    "mentions": 0,
                                    "members": {}
                                }
                            }
                        },
                        upsert=True
                    )

                    reply = discord.Embed(
                        title = f"‚úÖ –ì–∏–ª—å–¥–∏—è **{guild_name}** —Å–æ–∑–¥–∞–Ω–∞",
                        description = (
                            f"–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–∏–ª—å–¥–∏—é: `{pr}edit-guild`\n"
                            f"–ü—Ä–æ—Ñ–∏–ª—å –≥–∏–ª—å–¥–∏–∏: `{pr}guild-info {guild_name}`\n"
                            f"–ó–∞–π—Ç–∏ –≤ –≥–∏–ª—å–¥–∏—é `{pr}join-guild {guild_name}`"
                        ),
                        color = mmorpg_col("clover")
                    )
                    reply.set_thumbnail(url = default_avatar_url)
                    await ctx.send(embed = reply)

                    log = discord.Embed(
                        title="‚ôª –°–æ–∑–¥–∞–Ω–∞ –≥–∏–ª—å–¥–∏—è",
                        description=(
                            f"**–°–æ–∑–¥–∞—Ç–µ–ª—å:** {ctx.author}\n"
                            f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {guild_name}\n"
                        ),
                        color=mmorpg_col("clover")
                    )
                    await post_log(ctx.guild, lc_id, log)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["edit-guild", "editguild", "eg", "edit"])
    async def edit_guild(self, ctx, param, *, text_data = None):
        pr = ctx.prefix
        collection = db["subguilds"]
        parameters = {
            "name": ["–Ω–∞–∑–≤–∞–Ω–∏–µ"],
            "description": ["–æ–ø–∏—Å–∞–Ω–∏–µ"],
            "avatar_url": ["–∞–≤–∞—Ç–∞—Ä–∫–∞"],
            "leader_id": ["–≥–ª–∞–≤–∞", "owner"],
            "helper_id": ["–ø–æ–º–æ—â–Ω–∏–∫", "–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å"],
            "role_id": ["—Ä–æ–ª—å"],
            "private": ["–ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", "privacy"]
        }
        parameter = find_alias(parameters, param)

        if parameter is None:
            reply = discord.Embed(
                title = "‚ùì –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫",
                description = (
                    "> `name`\n"
                    "> `description`\n"
                    "> `avatar`\n"
                    "> `leader`\n"
                    "> `helper`\n"
                    "> `role`\n"
                    "> `privacy`\n"
                    f"**–ü–æ–¥—Ä–æ–±–Ω–µ–µ:** `{pr}{ctx.command.name}`\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{pr}{ctx.command.name} –ü–∞—Ä–∞–º–µ—Ç—Ä [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏] –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`\n'
                    f'**–ü—Ä–∏–º–µ—Ä:** `{pr}{ctx.command.name} name [–ú–æ—è –≥–∏–ª—å–¥–∏—è] –•—Ä–∞–Ω–∏—Ç–µ–ª–∏`\n'
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            if text_data is None:
                reply = discord.Embed(
                    title = f"üõ† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ {pr}edit-guild {param}",
                    description = (
                        f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {param_desc[parameter]['usage']}\n"
                        f"**–ü—Ä–∏–º–µ—Ä:** {param_desc[parameter]['example']}"
                    )
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            else:
                search, text = sep_args(text_data)

                result = collection.find_one(
                    filter={"_id": ctx.guild.id},
                    projection={
                        "subguilds.members": False,
                        "subguilds.requests": False,
                        "subguilds.description": False
                    }
                )
                guild_name = await search_and_choose(get_field(result, "subguilds"), search, ctx.message, ctx.prefix, self.client)

                if result is None:
                    reply = discord.Embed(
                        title = "üí¢ –û—à–∏–±–∫–∞",
                        description = f"–ü–æ –∑–∞–ø—Ä–æ—Å—É **{search}** –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –≥–∏–ª—å–¥–∏–π",
                        color = mmorpg_col("vinous")
                    )
                    await ctx.send(embed = reply)
                
                elif result == 1337:
                    pass

                else:
                    subguild = get_subguild(result, guild_name)
                    leader_id = get_field(subguild, "leader_id")
                    mr_id = get_field(result, "master_role_id")

                    if ctx.author.id != leader_id and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                        reply = discord.Embed(
                            title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                            description = (
                                f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                                f"> –ì–ª–∞–≤–∞ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                                "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                                "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                            ),
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                        await ctx.send(embed = reply)
                    
                    else:
                        correct_arg = True
                        value = text
                        if parameter == "name":
                            value = text.replace("[", "")
                            value = value.replace("]", "")
                            if value == "":
                                correct_arg = False
                                desc = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –≥–∏–ª—å–¥–∏—é –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π"

                            elif value in [sg["name"] for sg in result["subguilds"]]:
                                correct_arg = False
                                desc = f"–ì–∏–ª—å–¥–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {anf(value)} —É–∂–µ –µ—Å—Ç—å"
                            
                            if not correct_arg:
                                reply = discord.Embed(
                                    title = "‚ùå –û—à–∏–±–∫–∞",
                                    description = desc,
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                        elif parameter in ["leader_id", "helper_id"]:
                            value = detect.member(ctx.guild, text)

                            if text.lower() == "delete":
                                value = None

                            elif value is None:
                                correct_arg = False

                                reply = discord.Embed(
                                    title = "üí¢ –û—à–∏–±–∫–∞",
                                    description = f"–í—ã –≤–≤–µ–ª–∏ {text}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                            elif value.id == leader_id:
                                reply = discord.Embed(
                                    title = "üí¢ –û—à–∏–±–∫–∞",
                                    description = f"{anf(value)} —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–æ–π —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏.",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                            else:
                                value = value.id
                            
                        elif parameter == "role_id":
                            value = detect.role(ctx.guild, text)
                            if text.lower() == "delete":
                                value = None
                            elif value is None:
                                correct_arg = False

                                reply = discord.Embed(
                                    title = "üí¢ –û—à–∏–±–∫–∞",
                                    description = f"–í—ã –≤–≤–µ–ª–∏ {text}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                            elif role_gte(value, ctx.author) or not has_permissions(ctx.author, ["manage_roles"]):
                                correct_arg = False

                                reply = discord.Embed(
                                    title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                                    description = f"–†–æ–ª—å <@&{value.id}> –Ω–µ –Ω–∏–∂–µ –í–∞—à–µ–π –∏–ª–∏ —É –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏.",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)
                            
                            elif role_gte(value, ctx.guild.me) or not has_permissions(ctx.guild.me, ["manage_roles"]):
                                correct_arg = False

                                reply = discord.Embed(
                                    title = "‚ö† –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤",
                                    description = f"–†–æ–ª—å <@&{value.id}> –Ω–µ –Ω–∏–∂–µ –º–æ–µ–π –∏–ª–∏ —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏.",
                                    color = discord.Color.gold()
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                            else:
                                value = value.id

                        elif parameter == "avatar_url":
                            atts = ctx.message.attachments
                            if atts != []:
                                value = atts[0].url
                            else:
                                value = text
                                correct_arg = image_link(text)
                            if not correct_arg:
                                reply = discord.Embed(
                                    title = "üí¢ –û—à–∏–±–∫–∞",
                                    description = f"–ù–µ —É–¥–∞—ë—Ç—Å—è –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —Å—Å—ã–ª–∫–µ {text}",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)

                        elif parameter == "private":
                            on = ["on", "–≤–∫–ª", "1"]
                            off = ["off", "–≤—ã–∫–ª", "0"]
                            if text.lower() in on:
                                value = True
                            elif text.lower() in off:
                                value = False
                            else:
                                correct_arg = False

                                reply = discord.Embed(
                                    title = "üí¢ –û—à–∏–±–∫–∞",
                                    description = f"–í—Ö–æ–¥–Ω–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç {text} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å `on` –∏–ª–∏ `off`",
                                    color = mmorpg_col("vinous")
                                )
                                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                                await ctx.send(embed = reply)
                        
                        if correct_arg:
                            subguild[parameter] = value

                            collection.find_one_and_update(
                                {"_id": ctx.guild.id, "subguilds.name": guild_name},
                                {"$set": {f"subguilds.$.{parameter}": value}},
                                upsert=True
                            )

                            reply = discord.Embed(
                                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                                description = f"**->** –ü—Ä–æ—Ñ–∏–ª—å –≥–∏–ª—å–¥–∏–∏: `{pr}guild-info {subguild['name']}`",
                                color = mmorpg_col("clover")
                            )
                            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                            await ctx.send(embed = reply)

    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.command(aliases = ["delete-guild", "deleteguild", "dg"])
    async def delete_guild(self, ctx, *, guild_name):
        pr = ctx.prefix
        collection = db["subguilds"]
        result = collection.find_one(
            {"_id": ctx.guild.id, "subguilds.name": guild_name},
            projection={
                "subguilds.name": True,
                "subguilds.leader_id": True,
                "master_role_id": True,
                "log_channel": True
            }
        )

        if result is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = (
                    f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{guild_name}**\n"
                    f"–°–ø–∏—Å–æ–∫ –≥–∏–ª—å–¥–∏–π: `{pr}guilds`"
                ),
                color = mmorpg_col("vinous")
            )
            await ctx.send(embed = reply)
        else:
            lc_id = get_field(result, "log_channel")
            mr_id = get_field(result, "master_role_id")
            subguild = get_subguild(result, guild_name)
            del result

            if ctx.author.id != subguild["leader_id"] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            else:
                collection.find_one_and_update(
                    {"_id": ctx.guild.id, "subguilds.name": guild_name},
                    {
                        "$pull": {
                            "subguilds": {"name": guild_name}
                        }
                    }
                )
                
                reply = discord.Embed(
                    title = "üóë –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
                    description = f"–í—ã —É–¥–∞–ª–∏–ª–∏ –≥–∏–ª—å–¥–∏—é **{guild_name}**"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

                log = discord.Embed(
                    title="üí• –£–¥–∞–ª–µ–Ω–∞ –≥–∏–ª—å–¥–∏—è",
                    description=(
                        f"**–£–¥–∞–ª–∏–ª:** {ctx.author}\n"
                        f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {guild_name}\n"
                    ),
                    color=mmorpg_col("vinous")
                )
                await post_log(ctx.guild, lc_id, log)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["req", "request"])
    async def requests(self, ctx, page, *, search):
        pr = ctx.prefix
        collection = db["subguilds"]
        interval = 20

        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection={
                "subguilds.members": False,
                "subguilds.description": False
            }
        )
        guild_name = await search_and_choose(get_field(result, "subguilds"), search, ctx.message, ctx.prefix, self.client)
        
        if guild_name is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = f"–ü–æ –∑–∞–ø—Ä–æ—Å—É **{search}** –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≥–∏–ª—å–¥–∏–π"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif guild_name == 1337:
            pass
        
        else:
            mr_id = get_field(result, "master_role_id")
            subguild = get_subguild(result, guild_name)
            del result

            if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            elif not subguild["private"]:
                reply = discord.Embed(
                    title = f"üõ† –ì–∏–ª—å–¥–∏—è {guild_name} –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                    description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            elif carve_int(page) is None:
                reply = discord.Embed(
                    title = "üí¢ –û—à–∏–±–∫–∞",
                    description = f"{page} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                page = carve_int(page)

                bad_ids = []
                req_list = []
                for ID in subguild["requests"]:
                    member = ctx.guild.get_member(ID)
                    if member is None:
                        bad_ids.append(ID)
                    else:
                        req_list.append(member)

                length = len(req_list)

                first_num = (page - 1) * interval
                total_pages = (length - 1) // interval + 1
                if first_num >= length:
                    title = "üîé –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                    desc = f"**–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü:** {total_pages}"
                    if length == 0:
                        title = f"üìú –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ {guild_name} –ø—É—Å—Ç"
                        desc = "–ó–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ üéÄ"
                    reply = discord.Embed(
                        title = title,
                        description = desc,
                        color = mmorpg_col("paper")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)
                
                else:
                    desc = ""
                    last_num = min(first_num + interval, length)
                    for i in range(first_num, last_num):
                        if req_list != None:
                            desc += f"**{i + 1})** {anf(req_list[i])}\n"

                    reply = discord.Embed(
                        title = "–ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",
                        description = (
                            f"**–í –≥–∏–ª—å–¥–∏—é:** {anf(guild_name)}\n"
                            f"**–ü—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å:** `{pr}accept –ù–æ–º–µ—Ä_–∑–∞–ø—Ä–æ—Å–∞ {guild_name}`\n"
                            f"**–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å:** `{pr}decline –ù–æ–º–µ—Ä_–∑–∞–ø—Ä–æ—Å–∞ {guild_name}`\n\n"
                            f"{desc}"
                        ),
                        color = mmorpg_col("lilac")
                    )
                    reply.set_footer(text = f"–°—Ç—Ä. {page}/{total_pages}")
                    await ctx.send(embed = reply)
                
                #======Remove invalid members======
                if bad_ids != []:
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$pull": {"subguilds.$.requests": {"$in": bad_ids}}}
                    )

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["ac"])
    async def accept(self, ctx, num, *, search):
        collection = db["subguilds"]

        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection={
                "subguilds.members": False,
                "subguilds.description": False
            }
        )
        guild_name = await search_and_choose(get_field(result, "subguilds"), search, ctx.message, ctx.prefix, self.client)

        if guild_name is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = f"–ü–æ –∑–∞–ø—Ä–æ—Å—É **{search}** –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≥–∏–ª—å–¥–∏–π"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif guild_name == 1337:
            pass
        
        else:
            mr_id = get_field(result, "master_role_id")
            subguild = get_subguild(result, guild_name)
            del result

            length = len(subguild["requests"])

            if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                correct_args = False

                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif not subguild["private"]:
                correct_args = False

                reply = discord.Embed(
                    title = f"üõ† –ì–∏–ª—å–¥–∏—è {guild_name} –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                    description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif num.lower() == "all":
                correct_args = True
                num = "all"
            
            elif carve_int(num) is None:
                correct_args = False
                reply = discord.Embed(
                    title = "üí¢ –û—à–∏–±–∫–∞",
                    description = f"{num} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            elif carve_int(num) > length:
                correct_args = False
                reply = discord.Embed(
                    title = "üí¢ –û—à–∏–±–∫–∞",
                    description = f"{num} –ø—Ä–µ–≤—ã—à–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                correct_args = True
                num = carve_int(num)
            
            if correct_args:
                if num == "all":
                    new_data = {f"subguilds.$.members.{ID}": {"messages": 0} for ID in subguild["requests"]}

                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$set": new_data}
                    )
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id},
                        {"$pull": {"subguilds.$[].requests": {"$in": subguild["requests"]}}},
                    )
                    desc = "–í—Å–µ –∑–∞—è–≤–∫–∏ –ø—Ä–∏–Ω—è—Ç—ã."
                    
                else:
                    user_id = subguild["requests"][num - 1]

                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$set": {f"subguilds.$.members.{user_id}": {"messages": 0}}}
                    )
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id},
                        {"$pull": {"subguilds.$[].requests": {"$in": [user_id]}}},
                    )
                    member = ctx.guild.get_member(user_id)
                    desc = f"–ó–∞—è–≤–∫–∞ {anf(member)} –ø—Ä–∏–Ω—è—Ç–∞"

                    await give_join_role(member, subguild["role_id"])
                
                reply = discord.Embed(
                    title = "üõ† –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                    description = desc
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["dec"])
    async def decline(self, ctx, num, *, search):
        collection = db["subguilds"]

        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection={
                "subguilds.members": False,
                "subguilds.description": False
            }
        )
        guild_name = await search_and_choose(get_field(result, "subguilds"), search, ctx.message, ctx.prefix, self.client)

        if guild_name is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = f"–ü–æ –∑–∞–ø—Ä–æ—Å—É **{search}** –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≥–∏–ª—å–¥–∏–π"
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif guild_name == 1337:
            pass
        
        else:
            mr_id = get_field(result, "master_role_id")
            subguild = get_subguild(result, guild_name)
            del result

            id_list = []
            to_pull = []
            for ID in subguild["requests"]:
                member = ctx.guild.get_member(ID)
                if member is None:
                    to_pull.append(ID)
                else:
                    id_list.append(ID)
            length = len(id_list)

            if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                correct_args = False

                reply = discord.Embed(
                    title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description = (
                        f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                        f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                        "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                        "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif not subguild["private"]:
                correct_args = False

                reply = discord.Embed(
                    title = f"üõ† –ì–∏–ª—å–¥–∏—è {guild_name} –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞",
                    description = f"–≠—Ç–æ –≥–∏–ª—å–¥–∏—è —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif num.lower() == "all":
                correct_args = True
                num = "all"
            
            elif carve_int(num) is None:
                correct_args = False
                reply = discord.Embed(
                    title = "üí¢ –û—à–∏–±–∫–∞",
                    description = f"{num} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            elif carve_int(num) > length:
                correct_args = False
                reply = discord.Embed(
                    title = "üí¢ –û—à–∏–±–∫–∞",
                    description = f"{num} –ø—Ä–µ–≤—ã—à–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                correct_args = True
                num = carve_int(num)
            
            if correct_args:
                if num == "all":
                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {"$pull": {"subguilds.$.requests": {"$in": subguild["requests"]}}}
                    )
                    desc = f"–í—Å–µ –∑–∞—è–≤–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã"
                else:
                    user_id = id_list[num-1]
                    to_pull.append(user_id)

                    collection.find_one_and_update(
                        {"_id": ctx.guild.id, "subguilds.name": guild_name},
                        {
                            "$pull": {"subguilds.$.requests": {"$in": to_pull}}
                        }
                    )
                    member = ctx.guild.get_member(user_id)
                    desc = f"–ó–∞—è–≤–∫–∞ {anf(member)} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                
                reply = discord.Embed(
                    title = "üõ† –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                    description = desc
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command()
    async def kick(self, ctx, parameter, value = None, *, search = None):
        pr = ctx.prefix
        param_aliases = {
            "user": ["—É—á–∞—Å—Ç–Ω–∏–∫", "member", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"],
            "under": ["lower", "–Ω–∏–∂–µ"],
            "last": ["–ø–æ—Å–ª–µ–¥–Ω–∏–µ"]
        }

        params = {
            "user": {
                "usage": f"`{pr}kick user @–£—á–∞—Å—Ç–Ω–∏–∫ –ì–∏–ª—å–¥–∏—è`",
                "example": f"`{pr}kick user @–£—á–∞—Å—Ç–Ω–∏–∫ –ú–æ—è –ì–∏–ª—å–¥–∏—è`",
                "info": "–ö–∏–∫–Ω—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
            },
            "under": {
                "usage": f"`{pr}kick under –ü–ª–∞–Ω–∫–∞_–æ–ø—ã—Ç–∞ –ì–∏–ª—å–¥–∏—è`",
                "example": f"`{pr}kick under 500 –ú–æ—è –ì–∏–ª—å–¥–∏—è`",
                "info": "–ö–∏–∫–Ω—É—Ç—å —Ç–µ—Ö, —É –∫–æ–≥–æ –∫–æ–ª-–≤–æ –æ–ø—ã—Ç–∞ –º–µ–Ω—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–∫–∏"
            },
            "last": {
                "usage": f"`{pr}kick last –ö–æ–ª-–≤–æ –ì–∏–ª—å–¥–∏—è`",
                "example": f"`{pr}kick last 10 –ú–æ—è –≥–∏–ª—å–¥–∏—è`",
                "info": "–ö–∏–∫–Ω—É—Ç—å —Å–∫–æ–ª—å–∫–æ-—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
            }
        }
        parameter = find_alias(param_aliases, parameter)
        if parameter is None:
            desc = ""
            for param in params:
                desc += f"> `{param}`\n"
            reply = discord.Embed(
                title = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
                description = f"–í—ã –≤–≤–µ–ª–∏: `{parameter}`\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n{desc}",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif value is None or search is None:
            reply = discord.Embed(
                title = f"üõ† {pr}kick {parameter}",
                description = (
                    f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {params[parameter]['info']}\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {params[parameter]['usage']}\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** {params[parameter]['example']}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        else:
            collection = db["subguilds"]
            result = collection.find_one(
                {"_id": ctx.guild.id},
                projection={
                    "subguilds.members": False,
                    "subguilds.description": False
                }
            )
            guild_name = await search_and_choose(get_field(result, "subguilds"), search, ctx.message, ctx.prefix, self.client)

            if guild_name is None:
                reply = discord.Embed(
                    title = "üí¢ –£–ø—Å",
                    description = f"–ü–æ –∑–∞–ø—Ä–æ—Å—É **{search}** –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≥–∏–ª—å–¥–∏–π"
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            
            elif guild_name == 1337:
                pass
            
            else:
                mr_id = get_field(result, "master_role_id")
                subguild = get_subguild(result, guild_name)
                del result

                if ctx.author.id not in [subguild["leader_id"], subguild["helper_id"]] and not has_permissions(ctx.author, ["administrator"]) and not has_roles(ctx.author, [mr_id]):
                    reply = discord.Embed(
                        title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                        description = (
                            f"–ù—É–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö:\n"
                            f"> –ì–ª–∞–≤–∞ / –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏ {guild_name}\n"
                            "> –ú–∞—Å—Ç–µ—Ä –≥–∏–ª—å–¥–∏–π\n"
                            "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                        ),
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed = reply)
                
                elif parameter == "user":
                    user = detect.member(ctx.guild, value)
                    if user is None:
                        reply = discord.Embed(
                            title = "üí¢ –£–ø—Å",
                            description = f"–í—ã –≤–≤–µ–ª–∏ {value}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    elif user.id == subguild["leader_id"]:
                        desc = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≥–ª–∞–≤—É –≥–∏–ª—å–¥–∏–∏"
                        if user.id == ctx.author.id:
                            desc = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è"
                        reply = discord.Embed(
                            title = "‚ùå –û—à–∏–±–∫–∞",
                            description = desc,
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    else:
                        res = collection.find_one_and_update(
                            {
                                "_id": ctx.guild.id,
                                "subguilds.name": guild_name,
                                f"subguilds.members.{user.id}": {"$exists": True}
                            },
                            {"$unset": {f"subguilds.$.members.{user.id}": ""}},
                            projection={"_id": True}
                        )
                        if res is not None:
                            reply = discord.Embed(
                                title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                                description = f"{anf(user)} –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}**",
                                color = mmorpg_col("clover")
                            )
                        else:
                            reply = discord.Embed(
                                title = "‚ùå –û—à–∏–±–∫–∞",
                                description = f"{anf(user)} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ **{guild_name}**",
                                color = mmorpg_col("vinous")
                            )
                    await remove_join_role(user, subguild["role_id"])
                    await ctx.send(embed = reply)
                
                elif parameter == "under":
                    if not value.isdigit() or "-" in value:
                        reply = discord.Embed(
                            title = "üí¢ –£–ø—Å",
                            description = f"–ü–ª–∞–Ω–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º\n–í—ã –≤–≤–µ–ª–∏: {value}",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    else:
                        value = int(value)

                        memb_data = subguild["members"]
                        holder = []
                        for key in memb_data:
                            memb = memb_data[key]
                            user_id = int(key)
                            if memb["messages"] <= value and user_id != subguild["leader_id"]:
                                holder.append(user_id)
                        del memb_data

                        to_unset = {}
                        to_unset.update([(f"subguilds.$.members.{ID}", "") for ID in holder])
                        
                        if to_unset != {}:
                            collection.find_one_and_update(
                                {"_id": ctx.guild.id, "subguilds.name": guild_name},
                                {"$unset": to_unset}
                            )
                        reply = discord.Embed(
                            title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–ò–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}** –∏—Å–∫–ª—é—á–µ–Ω–æ {len(holder)} —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤)",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

                        if subguild["role_id"] != None:
                            for ID in holder:
                                self.client.loop.create_task(remove_join_role(ctx.guild.get_member(ID), subguild["role_id"]))
                    
                    await ctx.send(embed = reply)

                elif parameter == "last":
                    if not value.isdigit() or "-" in value:
                        reply = discord.Embed(
                            title = "üí¢ –£–ø—Å",
                            description = f"–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º\n–í—ã –≤–≤–µ–ª–∏: {value}",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    else:
                        value = int(value)

                        memb_data = subguild["members"]
                        pairs = []
                        for key in memb_data:
                            memb = memb_data[key]
                            user_id = int(key)
                            if user_id != subguild["leader_id"]:
                                pairs.append((user_id, memb["messages"]))
                        del memb_data

                        pairs.sort(key=lambda i: i[1], reverse=True)
                        
                        length = len(pairs)
                        segment = min(value, length)

                        pairs = pairs[length - segment: length]

                        to_unset = {}
                        to_unset.update([(f"subguilds.$.members.{pair[0]}", "") for pair in pairs])
                        
                        if to_unset != {}:
                            collection.find_one_and_update(
                                {"_id": ctx.guild.id, "subguilds.name": guild_name},
                                {"$unset": to_unset}
                            )
                        reply = discord.Embed(
                            title = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–ò–∑ –≥–∏–ª—å–¥–∏–∏ **{guild_name}** –∏—Å–∫–ª—é—á–µ–Ω–æ {segment} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤)",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

                        if subguild["role_id"] != None:
                            for pair in pairs:
                                ID = pair[0]
                                self.client.loop.create_task(remove_join_role(ctx.guild.get_member(ID), subguild["role_id"]))
                    
                    await ctx.send(embed = reply)

    #========== Errors ==========
    @create_guild.error
    async def create_guild_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** —Å–æ–∑–¥–∞—ë—Ç –≥–∏–ª—å–¥–∏—é\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} –ö–æ—Ä–æ–ª–∏`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @edit_guild.error
    async def edit_guild_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥–∏–ª—å–¥–∏—é\n"
                    "**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n"
                    "> `name`\n"
                    "> `description`\n"
                    "> `avatar`\n"
                    "> `leader`\n"
                    "> `helper`\n"
                    "> `role`\n"
                    "> `privacy`\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ü–∞—Ä–∞–º–µ—Ç—Ä [–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏] –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`\n'
                    f'**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} name [–¶–∞—Ä–∏ –ì–æ—Ä—ã] –•—Ä–∞–Ω–∏—Ç–µ–ª–∏`\n'
                    f'**–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö:**\n'
                    f"`{p}{cmd} name`\n"
                    f"`{p}{cmd} description`\n"
                    f"`{p}{cmd} ...`\n"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @delete_guild.error
    async def delete_guild_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** —É–¥–∞–ª—è–µ—Ç –≥–∏–ª—å–¥–∏—é\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏`\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} –ö–æ—Ä–æ–ª–∏`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @requests.error
    async def requests_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–∫—É—é-–ª–∏–±–æ –≥–∏–ª—å–¥–∏—é\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`\n'
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} 1 –ö–æ—Ä–æ–ª–∏`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @accept.error
    async def accept_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è`\n'
                    f"**–ü—Ä–∏–º–µ—Ä—ã:** `{p}{cmd} 1 –ö–æ—Ä–æ–ª–∏`\n"
                    f">> `{p}{cmd} all –ö–æ—Ä–æ–ª–∏`\n"
                    f"**–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:** `{p}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @decline.error
    async def decline_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ù–æ–º–µ—Ä_–∑–∞—è–≤–∫–∏ –ì–∏–ª—å–¥–∏—è`\n'
                    f"**–ü—Ä–∏–º–µ—Ä—ã:** `{p}{cmd} 1 –ö–æ—Ä–æ–ª–∏`\n"
                    f">> `{p}{cmd} all –ö–æ—Ä–æ–ª–∏`\n"
                    f"**–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:** `{p}requests –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ì–∏–ª—å–¥–∏—è`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @kick.error
    async def kick_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –∏—Å–∫–ª—é—á–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞(–æ–≤) –∏–∑ –≥–∏–ª—å–¥–∏–∏\n"
                    f"**–ü–æ–¥–∫–æ–º–∞–Ω–¥—ã:**\n"
                    f"> `{p}{cmd} user`\n"
                    f"> `{p}{cmd} under`\n"
                    f"> `{p}{cmd} last`\n"
                    "–í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @reputation.error
    async def reputation_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –∏–∑–º–µ–Ω—è–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≥–∏–ª—å–¥–∏–∏\n"
                    f"**–ü–æ–¥–∫–æ–º–∞–Ω–¥—ã:**\n"
                    f"> `{p}{cmd} change`\n"
                    f"> `{p}{cmd} set`\n"
                    f"**–ü—Ä–∏–º–µ—Ä—ã:** `{p}{cmd} change -10 –ö–æ—Ä–æ–ª–∏ –£—á–∞—Å—Ç–Ω–∏–∫ –±—ã–ª –Ω–∞–∫–∞–∑–∞–Ω`\n"
                    f">> `{p}{cmd} set 100 –ö–æ—Ä–æ–ª–∏ –ù–∞—á–Ω—ë–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


def setup(client):
    client.add_cog(guild_control(client))