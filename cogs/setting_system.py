import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import os, datetime

import pymongo
from pymongo import MongoClient

app_string = str(os.environ.get("cluster_app_string"))
cluster = MongoClient(app_string)
db = cluster["guild_data"]

#---------- Variables ------------
from functions import member_limit, guild_limit

#---------- Functions ------------
from functions import has_permissions, get_field, detect, find_alias, read_message, display_list

# Other
def mmorpg_col(col_name):
    colors = {
        "paper": discord.Color.from_rgb(163, 139, 101),
        "canopy": discord.Color.from_rgb(120, 55, 55),
        "sky": discord.Color.from_rgb(131, 171, 198),
        "clover": discord.Color.from_rgb(59, 160, 113),
        "vinous": discord.Color.from_rgb(135, 20, 20),
        "lilac": discord.Color.from_rgb(120, 100, 153),
        "pancake": discord.Color.from_rgb(211, 150, 65)
    }
    return colors[col_name]

async def post_log(guild, channel_id, log):
    if channel_id is not None:
        channel = guild.get_channel(channel_id)
        if channel is not None:
            await channel.send(embed=log)

class setting_system(commands.Cog):
    def __init__(self, client):
        self.client = client

    #---------- Events -----------
    @commands.Cog.listener()
    async def on_ready(self):
        print(">> Setting system cog is loaded")
    
    #---------- Commands ----------
    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases=["set", "how-set", "config"])
    async def settings(self, ctx):
        collection = db["cmd_channels"]
        result = collection.find_one({"_id": ctx.guild.id})
        wl_channels = get_field(result, "channels")
        c_prefix = get_field(result, "prefix", default=".")
        
        if wl_channels is None:
            chan_desc = "> –í—Å–µ –∫–∞–Ω–∞–ª—ã\n"
        else:
            chan_desc = ""
            for ID in wl_channels:
                chan_desc += f"> <#{ID}>\n"
            if chan_desc == "":
                chan_desc = "> –í—Å–µ –∫–∞–Ω–∞–ª—ã\n"
        
        collection = db["subguilds"]
        result = collection.find_one(
            {"_id": ctx.guild.id},
            projection={
                "subguilds": False
            }
        )
        log_channel_id = get_field(result, "log_channel")
        pinger_id = get_field(result, "mentioner_id")
        mr_ids = get_field(result, "master_roles", default=[])
        cr_ids = get_field(result, "creator_roles", default=[])
        lim_desc = get_field(result, "member_limit", default=member_limit)
        g_lim_desc = get_field(result, "guild_limit", default=guild_limit)
        igch = get_field(result, "ignore_chats")
        xp_locked = get_field(result, "xp_locked", default=False)

        if igch is None:
            ig_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n"
        else:
            ig_desc = ""
            for ID in igch:
                ig_desc += f"> <#{ID}>\n"
        
        if log_channel_id is None:
            lc_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        else:
            lc_desc = f"> <#{log_channel_id}>"
        
        if pinger_id is None:
            ping_desc = "> –≤—ã–∫–ª—é—á–µ–Ω–æ"
        else:
            ping_desc = f"> {ctx.guild.get_member(pinger_id)}"
        
        if mr_ids == []:
            mr_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else:
            mr_desc = ""
            for ID in mr_ids:
                mr_desc += f"> <@&{ID}>\n"
        
        if cr_ids == []:
            cr_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else:
            cr_desc = ""
            for ID in cr_ids:
                cr_desc += f"> <@&{ID}>\n"
        
        if xp_locked:
            xpl_desc = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞"
        else:
            xpl_desc = "‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞"

        reply = discord.Embed(
            title = "‚öô –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            description = (
                f"**–ü—Ä–µ—Ñ–∏–∫—Å:** `{c_prefix}`"
            ),
            color = mmorpg_col("lilac")
        )
        reply.add_field(name="**–ö–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞**", value=f"{chan_desc}")
        reply.add_field(name="**–ö–∞–Ω–∞–ª—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—ã—Ç–∞**", value=f"{ig_desc}")
        reply.add_field(name="**–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤**", value=f"{lc_desc}", inline=False)
        reply.add_field(name="**–†–æ–ª–∏ –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π:**", value=f"{mr_desc}")
        reply.add_field(name="**–†–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π**", value=f"{cr_desc}")
        reply.add_field(name="**–í–µ—Å—Ç–∏ –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ—Ç**", value=f"{ping_desc}", inline=False)
        reply.add_field(name="**–õ–∏–º–∏—Ç –≥–∏–ª—å–¥–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**", value=f"> {g_lim_desc}")
        reply.add_field(name="**–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≥–∏–ª—å–¥–∏—é**", value=f"> {lim_desc}")
        reply.add_field(name="**–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞**", value=f"> {xpl_desc}", inline=False)

        reply.set_thumbnail(url = f"{ctx.guild.icon_url}")
        await ctx.send(embed = reply)

    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.command(aliases = ["set-prefix", "setprefix", "sp"])
    async def prefix(self, ctx, *, text_input):
        text_input = text_input[:30]
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = str(ctx.author), icon_url = str(ctx.author.avatar_url))
            await ctx.send(embed = reply)
        
        else:
            collection = db["cmd_channels"]
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$set": {"prefix": text_input}},
                upsert=True
            )
            reply = discord.Embed(
                title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description=f"–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å: {text_input}\n–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{text_input}settings`",
                color=mmorpg_col("clover")
            )
            reply.set_footer(text = str(ctx.author), icon_url = str(ctx.author.avatar_url))
            await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["cmd-channels", "cmdchannels", "cc"])
    async def cmd_channels(self, ctx, *, text_input):
        collection = db["cmd_channels"]
        raw_ch = text_input.split()

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif "delete" in raw_ch[0].lower():
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {
                    "$set": {"channels": None}
                }
            )
            reply = discord.Embed(
                title = "‚ôª –ö–∞–Ω–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã",
                description = "–¢–µ–ø–µ—Ä—å —è —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö",
                color = mmorpg_col("clover")
            )
            await ctx.send(embed = reply)

        else:
            channel_ids = []
            invalid_channel_mentioned = False
            for s in raw_ch:
                ch = detect.channel(ctx.guild, s)
                if ch is None:
                    invalid_channel_mentioned = True
                    break
                elif not ch.id in channel_ids:
                    channel_ids.append(ch.id)

            if invalid_channel_mentioned:
                reply = discord.Embed(
                    title = f"üí¢ –£–ø—Å",
                    description = (
                        f"–í–æ–∑–º–æ–∂–Ω–æ, —è –Ω–µ –≤–∏–∂—É –∫–∞–∫–∏–µ-—Ç–æ –∫–∞–Ω–∞–ª—ã, –∏–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ\n"
                        f"–í –∫–∞—á–µ—Å—Ç–≤–µ –∫–∞–Ω–∞–ª–æ–≤ —É–∫–∞–∂–∏—Ç–µ –∏—Ö **#—Å—Å—ã–ª–∫–∏** –∏–ª–∏ **ID**\n"
                        f"–ò–ª–∏ –∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å - `delete`"
                    ),
                    color=mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)

            else:
                channel_ids = channel_ids[:+30]
                collection.find_one_and_update(
                    {"_id": ctx.guild.id},
                    {
                        "$set": {"channels": channel_ids}
                    },
                    upsert=True
                )
                desc = ""
                for ch in channel_ids:
                    desc += f"> <#{ch}>\n"
                reply = discord.Embed(
                    title = "üõ† –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                    description = (
                        f"–¢–µ–ø–µ—Ä—å –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö:\n"
                        f"{desc}"
                        f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã üòâ"
                    ),
                    color = mmorpg_col("lilac")
                )
                await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["ignore-channels", "ignore", "ic"])
    async def ignore_channels(self, ctx, *, text_input):
        collection = db["subguilds"]
        raw_ch = text_input.split()

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif "delete" in raw_ch[0].lower():
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {
                    "$unset": {"ignore_chats": ""}
                }
            )
            reply = discord.Embed(
                title = "‚ôª –ö–∞–Ω–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã",
                description = "–¢–µ–ø–µ—Ä—å —è –Ω–∞—á–∏—Å–ª—è—é –æ–ø—ã—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö",
                color = mmorpg_col("clover")
            )
            await ctx.send(embed = reply)

        else:
            channel_ids = []
            invalid_channel_mentioned = False
            for s in raw_ch:
                ch = detect.channel(ctx.guild, s)
                if ch is None:
                    invalid_channel_mentioned = True
                    break
                elif not ch.id in channel_ids:
                    channel_ids.append(ch.id)
            
            if invalid_channel_mentioned:
                reply = discord.Embed(
                    title = f"üí¢ –£–ø—Å",
                    description = (
                        f"–í–æ–∑–º–æ–∂–Ω–æ, —è –Ω–µ –≤–∏–∂—É –∫–∞–∫–∏–µ-—Ç–æ –∫–∞–Ω–∞–ª—ã, –∏–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ\n"
                        f"–í –∫–∞—á–µ—Å—Ç–≤–µ –∫–∞–Ω–∞–ª–æ–≤ —É–∫–∞–∂–∏—Ç–µ –∏—Ö **#—Å—Å—ã–ª–∫–∏** –∏–ª–∏ **ID**\n"
                        f"–ò–ª–∏, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∫–∞–∂–∏—Ç–µ `delete`"
                    ),
                    color=mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed = reply)
            else:
                channel_ids = channel_ids[:+30]

                collection.find_one_and_update(
                    {"_id": ctx.guild.id},
                    {
                        "$set": {"ignore_chats": channel_ids}
                    },
                    upsert=True
                )
                desc = ""
                for ch in channel_ids:
                    desc += f"> <#{ch}>\n"
                reply = discord.Embed(
                    title = "üõ† –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                    description = (
                        f"–¢–µ–ø–µ—Ä—å —è –Ω–µ –±—É–¥—É –Ω–∞—á–∏—Å–ª—è—Ç—å –æ–ø—ã—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–∞—Ö:\n"
                        f"{desc}"
                    ),
                    color = mmorpg_col("lilac")
                )
                await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["xp-lock", "freeze"])
    async def xp_lock(self, ctx, option):
        p = ctx.prefix
        option = option.lower()
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif option in ["on", "–≤–∫–ª"]:
            collection = db["subguilds"]
            collection.update_one(
                {"_id": ctx.guild.id},
                {"$set": {"xp_locked": True}},
                upsert=True
            )
            reply = discord.Embed(
                title = "üîí –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–í–∫–ª—é—á–µ–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞\n"
                    f"–í—ã–∫–ª—é—á–∏—Ç—å: `{p}xp-lock off`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif option in ["off", "–≤—ã–∫–ª"]:
            collection = db["subguilds"]
            collection.update_one(
                {"_id": ctx.guild.id},
                {"$set": {"xp_locked": False}},
                upsert=True
            )
            reply = discord.Embed(
                title = "üîë –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞\n"
                    f"–í–∫–ª—é—á–∏—Ç—å: `{p}xp-lock on`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è `{option}`",
                description = (
                    f"`{p}xp-lock on` - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –æ–ø—ã—Ç–∞\n"
                    f"`{p}xp-lock off` - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –æ–ø—ã—Ç–∞"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["log-channel", "logchannel", "logs-channel", "lc"])
    async def log_channel(self, ctx, channel_s):
        pr = ctx.prefix
        channel = detect.channel(ctx.guild, channel_s)
        
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        elif channel_s.lower() == "delete":
            collection = db["subguilds"]
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$unset": {"log_channel": ""}}
            )
            reply = discord.Embed(
                title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description=(
                    f"–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ —É–¥–∞–ª—ë–Ω\n\n"
                    f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{pr}settings`"
                ),
                color=mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif channel is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ {channel_s}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è –∫–∞–Ω–∞–ª, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        else:
            collection = db["subguilds"]
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$set": {"log_channel": channel.id}},
                upsert=True
            )

            reply = discord.Embed(
                title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description=(
                    f"–¢–µ–ø–µ—Ä—å –æ—Ç—á—ë—Ç—ã —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –∫–∞–Ω–∞–ª <#{channel.id}>\n"
                    f"–û—Ç–º–µ–Ω–∏—Ç—å: `{pr}log-channel delete`\n"
                    f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{pr}settings`"
                ),
                color=mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["members-limit", "memberslimit", "ml"])
    async def members_limit(self, ctx, lim):
        pr = ctx.prefix
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        elif not lim.isdigit():
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
                description = f"–ê—Ä–≥—É–º–µ–Ω—Ç {lim} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        elif int(lim) > member_limit:
            reply = discord.Embed(
                title = "‚ùå –û—à–∏–±–∫–∞",
                description = f"–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{member_limit}** –Ω–∞ –≥–∏–ª—å–¥–∏—é",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            collection = db["subguilds"]
            lim = int(lim)

            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$set": {"member_limit": lim}},
                upsert=True
            )
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = (
                    f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥–∏–ª—å–¥–∏—è—Ö: **{lim}**\n"
                    f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{pr}settings`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(name="guild-limit", aliases = ["guildlimit", "gl"])
    async def guilds_limit(self, ctx, lim):
        pr = ctx.prefix
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        elif not lim.isdigit():
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
                description = f"–ê—Ä–≥—É–º–µ–Ω—Ç {lim} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        elif int(lim) > guild_limit:
            reply = discord.Embed(
                title = "‚ùå –û—à–∏–±–∫–∞",
                description = f"–õ–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{guild_limit}**",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            collection = db["subguilds"]
            lim = int(lim)

            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {"$set": {"guild_limit": lim}},
                upsert=True
            )
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = (
                    f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{lim}**\n"
                    f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{pr}settings`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @commands.cooldown(1, 30, commands.BucketType.member)
    @commands.command(aliases=["clear-guilds", "delete-all-guilds"])
    async def clear_guilds(self, ctx):
        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            reply = discord.Embed(
                title="üõ† –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                description=(
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –í—ã —É–¥–∞–ª–∏—Ç–µ **–≤—Å–µ** –≥–∏–ª—å–¥–∏–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n"
                    "–ù–∞–ø–∏—à–∏—Ç–µ `–¥–∞` –∏–ª–∏ `–Ω–µ—Ç`"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            sys_msg = await ctx.send(embed=reply)

            msg = await read_message(ctx.channel, ctx.author, 60, self.client)
            if msg != None:
                reply_text = msg.content.lower()
                if reply_text in ["yes", "1", "–¥–∞"]:
                    collection = db["subguilds"]
                    result = collection.find_one_and_update(
                        {"_id": ctx.guild.id},
                        {"$unset": {"subguilds": ""}},
                        projection={"log_channel": True}
                    )
                    reply = discord.Embed(
                        title="‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = "–í—Å–µ –≥–∏–ª—å–¥–∏–∏ —É–¥–∞–ª–µ–Ω—ã",
                        color=mmorpg_col("clover")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed=reply)
                    await sys_msg.delete()

                    lc_id = get_field(result, "log_channel")
                    log = discord.Embed(
                        title="üóë –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –≥–∏–ª—å–¥–∏–∏",
                        description=(
                            f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {ctx.author}"
                        ),
                        color=discord.Color.dark_red()
                    )
                    await post_log(ctx.guild, lc_id, log)

                else:
                    reply = discord.Embed(
                        title="‚ùå –û—Ç–º–µ–Ω–∞",
                        description="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
                        color=mmorpg_col("vinous")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed=reply)
                    await sys_msg.delete()

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(name="master-role", aliases = ["master-roles", "masterrole", "mr"])
    async def master_role(self, ctx, option, *, role_s=None):
        mr_lim = 5
        p, cmd = ctx.prefix, ctx.command.name

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        else:
            parameters = {
                "add": ["append", "set"],
                "delete": ["remove"]
            }
            parameter = find_alias(parameters, option)
            if parameter is None:
                reply = discord.Embed(
                    title = f"üí¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä `{option}`",
                    description = (
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
                        f"> `{p}{cmd} add`\n"
                        f"> `{p}{cmd} delete`"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)

            elif role_s is None:
                help_texts = {
                    "add": {
                        "desc": "–î–æ–±–∞–≤–ª—è–µ—Ç –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                        "usage": f"`{p}{cmd} add @–†–æ–ª—å`"
                    },
                    "delete": {
                        "desc": "–£–¥–∞–ª—è–µ—Ç –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏",
                        "usage": (
                            f"—É–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏: `{p}{cmd} delete @–†–æ–ª—å`\n"
                            f"–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–µ–π: `{p}{cmd} delete all`"
                        )
                    }
                }
                help_text = help_texts[parameter]
                reply = discord.Embed(
                    title=f"‚ùî –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `{p}{cmd} {parameter}`",
                    description=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {help_text['desc']}\n**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {help_text['usage']}"
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)

            else:
                collection = db["subguilds"]
                result = collection.find_one(
                    {"_id": ctx.guild.id},
                    projection={"master_roles": True}
                )
                master_roles = get_field(result, "master_roles", default=[])
                del result

                if role_s.lower() != "all":
                    role = detect.role(ctx.guild, role_s)
                if parameter == "add":
                    if role is None:
                        reply = discord.Embed(
                            title = "üí¢ –†–æ–ª—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ **{role_s}**, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role.id in master_roles:
                        reply = discord.Embed(
                            title = "üí¢ –£–∂–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                            description = f"<@&{role.id}> —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif len(master_roles) >= mr_lim:
                        reply = discord.Embed(
                            title = "üí¢ –õ–∏–º–∏—Ç",
                            description = (
                                f"–ú–∞—Å—Ç–µ—Ä-—Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ {mr_lim}\n"
                                f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{p}settings`"
                            ),
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    else:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$addToSet": {"master_roles": role.id}},
                            upsert=True
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                else:
                    if role_s.lower() == "all":
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$unset": {"master_roles": ""}}
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–í—Å–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏ —É–¥–∞–ª–µ–Ω—ã.\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role is None:
                        reply = discord.Embed(
                            title = "üí¢ –†–æ–ª—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ **{role_s}**, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role.id not in master_roles:
                        reply = discord.Embed(
                            title = "üí¢ –ù–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                            description = f"<@&{role.id}> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    else:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$pull": {"master_roles": {"$in": [role.id]}}},
                            upsert=True
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["creator-role"])
    async def creator(self, ctx, option, *, role_s=None):
        cr_lim = 5
        p, cmd = ctx.prefix, ctx.command.name

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        else:
            parameters = {
                "add": ["append", "set"],
                "delete": ["remove"]
            }
            parameter = find_alias(parameters, option)
            if parameter is None:
                reply = discord.Embed(
                    title = f"üí¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä `{option}`",
                    description = (
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
                        f"> `{p}{cmd} add`\n"
                        f"> `{p}{cmd} delete`"
                    ),
                    color = mmorpg_col("vinous")
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)

            elif role_s is None:
                help_texts = {
                    "add": {
                        "desc": "–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                        "usage": f"`{p}{cmd} add @–†–æ–ª—å`"
                    },
                    "delete": {
                        "desc": "–£–¥–∞–ª—è–µ—Ç —Ä–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                        "usage": (
                            f"—É–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π: `{p}{cmd} delete @–†–æ–ª—å`\n"
                            f"–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö: `{p}{cmd} delete all`"
                        )
                    }
                }
                help_text = help_texts[parameter]
                reply = discord.Embed(
                    title=f"‚ùî –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `{p}{cmd} {parameter}`",
                    description=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {help_text['desc']}\n**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {help_text['usage']}"
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)

            else:
                collection = db["subguilds"]
                result = collection.find_one(
                    {"_id": ctx.guild.id},
                    projection={"creator_roles": True}
                )
                creator_roles = get_field(result, "creator_roles", default=[])
                del result

                if role_s.lower() != "all":
                    role = detect.role(ctx.guild, role_s)
                if parameter == "add":
                    if role is None:
                        reply = discord.Embed(
                            title = "üí¢ –†–æ–ª—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ **{role_s}**, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role.id in creator_roles:
                        reply = discord.Embed(
                            title = "üí¢ –£–∂–µ —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                            description = f"<@&{role.id}> —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif len(creator_roles) >= cr_lim:
                        reply = discord.Embed(
                            title = "üí¢ –õ–∏–º–∏—Ç",
                            description = (
                                f"–†–æ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ {cr_lim}\n"
                                f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{p}settings`"
                            ),
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    else:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$addToSet": {"creator_roles": role.id}},
                            upsert=True
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                else:
                    if role_s.lower() == "all":
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$unset": {"creator_roles": ""}}
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"–í—Å–µ —Ä–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π —É–¥–∞–ª–µ–Ω—ã.\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role is None:
                        reply = discord.Embed(
                            title = "üí¢ –†–æ–ª—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞",
                            description = f"–í—ã –≤–≤–µ–ª–∏ **{role_s}**, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —Ä–æ–ª—å, –Ω–æ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    elif role.id not in creator_roles:
                        reply = discord.Embed(
                            title = "üí¢ –ù–µ —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                            description = f"<@&{role.id}> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("vinous")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)

                    else:
                        collection.find_one_and_update(
                            {"_id": ctx.guild.id},
                            {"$pull": {"creator_roles": {"$in": [role.id]}}},
                            upsert=True
                        )
                        reply = discord.Embed(
                            title = "‚ôª –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                            description = f"<@&{role.id}> –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                            color = mmorpg_col("clover")
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(embed=reply)
    
    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases = ["ping-count", "pingcount", "pc"])
    async def ping_count(self, ctx, u_search):
        collection = db["subguilds"]
        user = detect.member(ctx.guild, u_search)

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        
        elif u_search.lower() == "delete":
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {
                    "$set": {
                        "mentioner_id": None
                    }
                }
            )
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = "–ë–æ–ª—å—à–µ –Ω–µ –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π",
                color = mmorpg_col("clover")
            )

        elif user is None:
            reply = discord.Embed(
                title = "üí¢ –£–ø—Å",
                description = f"–í—ã –≤–≤–µ–ª–∏ {u_search}, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–æ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")

        else:
            collection.find_one_and_update(
                {"_id": ctx.guild.id},
                {
                    "$set": {
                        "mentioner_id": user.id
                    }
                },
                upsert=True
            )
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = f"–¢–µ–ø–µ—Ä—å –≤ –≥–∏–ª—å–¥–∏—è—Ö –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç –ø–∏–Ω–≥–æ–≤ –æ—Ç **{user}**",
                color = mmorpg_col("clover")
            )
        await ctx.send(embed = reply)

    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.command(aliases = ["reset-guilds", "resetguilds", "rg", "reset-guild", "resetguild"])
    async def reset_guilds(self, ctx, parameter):
        pr = ctx.prefix
        collection = db["subguilds"]
        params = {
            "exp": ["xp", "–æ–ø—ã—Ç"],
            "mentions": ["pings", "—É–ø–æ–º–∏–Ω–∞–Ω–∏—è", "—Ç–µ–≥–∏"],
            "reputation": ["—Ä–µ–ø—É—Ç–∞—Ü–∏—è"]
        }
        parameter = find_alias(params, parameter)

        if not has_permissions(ctx.author, ["administrator"]):
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)
        
        elif parameter is None:
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
                description = (
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                    "> `exp`\n"
                    "> `mentions`\n"
                    "> `reputation`\n"
                    f"–ù–∞–ø—Ä–∏–º–µ—Ä `{pr}reset-guilds exp`"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

        else:
            result = None
            if parameter != "exp":
                value = 0
                if parameter == "reputation":
                    value = 100
                    desc = "–†–µ–ø—É—Ç–∞—Ü–∏—è –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞ –¥–æ 100"
                else:
                    desc = "None"
                
                result = collection.find_one_and_update(
                    {"_id": ctx.guild.id},
                    {
                        "$set": {f"subguilds.$[].{parameter}": value}
                    },
                    projection={"log_channel": True}
                )
            elif parameter == "exp":
                desc = "–û–ø—ã—Ç –±—ã–ª –æ–±–Ω—É–ª—ë–Ω"
                result = collection.find_one(
                    {"_id": ctx.guild.id},
                    projection={
                        "subguilds.name": True,
                        "subguilds.members": True,
                        "log_channel": True
                    }
                )
                if result != None:
                    for sg in result["subguilds"]:
                        zero_data = {}
                        zero_data.update([
                            (f"subguilds.$.members.{key}", {"id": int(key), "messages": 0}) for key in sg["members"]])
                        if zero_data != {}:
                            collection.find_one_and_update(
                                {"_id": ctx.guild.id, "subguilds.name": sg["name"]},
                                {"$set": zero_data}
                            )
            
            reply = discord.Embed(
                title = "‚ôª –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
                description = "–°–±—Ä–æ—Å –∑–∞–∫–æ–Ω—á–µ–Ω",
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

            log = discord.Embed(
                title="‚ôª –°–±—Ä–æ—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫",
                description=(
                    f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {ctx.author}\n"
                    f"{desc}"
                )
            )
            lc_id = get_field(result, "log_channel")
            await post_log(ctx.guild, lc_id, log)

    #========== Errors ===========
    @prefix.error
    async def prefix_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞.\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ù–æ–≤—ã–π_–ø—Ä–µ—Ñ–∏–∫—Å`\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} !`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @ping_count.error
    async def ping_count_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –≥–∏–ª—å–¥–∏–π\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`\n"
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} @MEE6#4876`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @reset_guilds.error
    async def reset_guilds_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –æ–±–Ω—É–ª—è–µ—Ç —Ç–æ–ø –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É\n"
                    "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**\n"
                    f"> `{p}{cmd} exp` - –ø–æ –æ–ø—ã—Ç—É\n"
                    f"> `{p}{cmd} reputation - –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏`\n"
                    f"> `{p}{cmd} mentions` - –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º\n\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @cmd_channels.error
    async def cmd_channels_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—ã\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} #–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...`\n'
                    f"**–°–±—Ä–æ—Å:** `{p}{cmd} delete`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
    
    @ignore_channels.error
    async def ignore_channels_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** —É–±–∏—Ä–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} #–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...`\n'
                    f"**–°–±—Ä–æ—Å:** `{p}{cmd} delete`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @xp_lock.error
    async def xp_lock_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –≤—ã–∫–ª—é—á–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} on | off`\n\n'
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @members_limit.error
    async def members_limit_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–æ –≤—Å–µ—Ö –≥–∏–ª—å–¥–∏—è—Ö\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ß–∏—Å–ª–æ`\n'
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} 50`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @guilds_limit.error
    async def guilds_limit_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} –ß–∏—Å–ª–æ`\n'
                    f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd} 20`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @log_channel.error
    async def log_channel_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –∏ –æ—Ç—á—ë—Ç–æ–≤ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö —Å –≥–∏–ª—å–¥–∏—è–º–∏.\n"
                    f'**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd} #–∫–∞–Ω–∞–ª`\n'
                    f"**–°–±—Ä–æ—Å:** `{p}{cmd} delete`\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @master_role.error
    async def master_role_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–æ–ª–∏, –¥–∞—é—â–∏–µ –µ—ë –æ–±–ª–∞–¥–∞—Ç–µ–ª—è–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—é–±—ã—Ö –≥–∏–ª—å–¥–∏–π, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –∫–∏–∫–∏ –∏–∑ –≥–∏–ª—å–¥–∏–π –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏.\n"
                    f"**–î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å:** `{p}{cmd} add @–†–æ–ª—å`\n"
                    f"**–°–±—Ä–æ—Å–∏—Ç—å –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å:** `{p}{cmd} delete @–†–æ–ª—å`\n"
                    f"**–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ:** `{p}{cmd} delete all`\n\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

    @creator.error
    async def creator_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            p = ctx.prefix
            cmd = ctx.command.name
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    "**–û–ø–∏—Å–∞–Ω–∏–µ:** –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–æ–ª–∏, –¥–∞—é—â–∏–µ –µ—ë –æ–±–ª–∞–¥–∞—Ç–µ–ª—è–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–π.\n"
                    f"**–î–æ–±–∞–≤–∏—Ç—å:** `{p}{cmd} add @–†–æ–ª—å`\n"
                    f"**–°–±—Ä–æ—Å–∏—Ç—å –æ–¥–Ω—É:** `{p}{cmd} delete @–†–æ–ª—å`\n"
                    f"**–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ:** `{p}{cmd} delete all`\n"
                    f"**–†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ–º:** `{p}{cmd} add @everyone`\n\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** {display_list(ctx.command.aliases)}"
                )
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

def setup(client):
    client.add_cog(setting_system(client))