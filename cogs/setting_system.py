import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import os, datetime


from pymongo import MongoClient
app_string = str(os.environ.get("cluster_app_string"))
cluster = MongoClient(app_string)
db = cluster["guild_data"]

#----------------------------+
#         Constants          |
#----------------------------+
from functions import cool_servers, owner_ids
from db_models import guild_limit, member_limit


#----------------------------+
#         Functions          |
#----------------------------+
from functions import find_alias, is_command, EmergencyExit
from db_models import Server, ResponseConfig
from custom_converters import IntConverter

# Other
def mmorpg_col(col_name):
    colors = {
        "paper": discord.Color.from_rgb(163, 139, 101),
        "canopy": discord.Color.from_rgb(120, 55, 55),
        "sky": discord.Color.from_rgb(131, 171, 198),
        "clover": discord.Color.from_rgb(59, 160, 113),
        "vinous": discord.Color.from_rgb(135, 20, 20),
        "lilac": discord.Color.from_rgb(120, 100, 153),
        "pancake": discord.Color.from_rgb(211, 150, 65)
    }
    return colors[col_name]


def is_cool_server():
    def predicate(ctx):
        return ctx.guild.id in cool_servers
    return commands.check(predicate)


async def post_log(guild, channel_id, log):
    if channel_id is not None:
        channel = guild.get_channel(channel_id)
        if channel is not None:
            await channel.send(embed=log)


async def do_smart_reset(server):     # BETA
    sconf = Server(server.id,
                {"subguilds.name": True,
                "subguilds.members": True,
                "log_channel": True})
    res = sconf.smart_reset()
    if sconf.log_channel is not None:
        desc = ""
        for name, sp in res:
            desc += f"> {name}: `+{sp}` ü™ê\n"

        log = discord.Embed(
            title="‚ôª –°–±—Ä–æ—Å –æ–ø—ã—Ç–∞ –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–ø–æ–∏–Ω—Ç–æ–≤",
            description=f"–ü—Ä–æ–≤–µ–¥—ë–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n{desc}"
        )
        await post_log(server, sconf.log_channel, log)


class Timer:
    def __init__(self, server_id: int, data: dict=None):
        self.id = server_id
        if data is None:
            collection = db["timers"]
            data = collection.find_one({"_id": self.id, "cycles": {"$gt": 0}})
            if data is None:
                data = {}
        now = datetime.datetime.utcnow()
        self.cycles = data.get("cycles", 1)
        self.interval = datetime.timedelta(hours=data.get("interval", 24))
        self.last_at = data.get("last_at", now - self.interval)
        self.next_at = self.last_at + self.interval
    
    @property
    def time_remaining(self):
        now = datetime.datetime.utcnow()
        return datetime.timedelta(seconds=0) if now >= self.next_at else self.next_at - now
    
    def update(self):
        collection = db["timers"]
        collection.update_one(
            {"_id": self.id, "cycles": {"$gt": 0}},
            {"$set": {"last_at": self.next_at, "cycles": self.cycles - 1}}
        )
        self.cycles -= 1
        self.last_at, self.next_at = self.next_at, self.next_at + self.interval
    
    def save(self):
        collection = db["timers"]
        collection.update_one(
            {"_id": self.id},
            {"$set": {
                "cycles": self.cycles,
                "interval": self.interval.total_seconds() // 3600,
                "last_at": self.last_at
            }},
            upsert=True
        )
    
    def delete(self):
        collection = db["timers"]
        collection.delete_one({"_id": self.id})


class TimerList:
    def __init__(self):
        collection = db["timers"]
        self.timers = [ Timer(data.get("_id"), data) for data in collection.find() ]


class setting_system(commands.Cog):
    def __init__(self, client):
        self.client = client

    #----------------------------+
    #           Events           |
    #----------------------------+
    @commands.Cog.listener()
    async def on_ready(self):
        print(">> Setting system cog is loaded")

        async def my_task(timer: Timer):
            while timer.cycles > 0:
                await asyncio.sleep(timer.time_remaining.total_seconds())
                try:
                    server = self.client.get_guild(timer.id)
                except Exception:
                    server = None
                if server is None:
                    break
                else:
                    await do_smart_reset(server)
                    del server
                timer.update()
            timer.delete()
            return
        
        tl = TimerList()
        for timer in tl.timers:
            self.client.loop.create_task(my_task(timer))
        print("--> Launched timers")
    
    #----------------------------+
    #          Commands          |
    #----------------------------+
    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.command(aliases=["set", "how-set", "config"])
    async def settings(self, ctx):
        rconf = ResponseConfig(ctx.guild.id)
        
        if rconf.cmd_channels == []:
            chan_desc = "> –í—Å–µ –∫–∞–Ω–∞–ª—ã\n"
        else:
            chan_desc = ""
            for ID in rconf.cmd_channels:
                chan_desc += f"> <#{ID}>\n"
            if chan_desc == "":
                chan_desc = "> –í—Å–µ –∫–∞–Ω–∞–ª—ã\n"
        
        sconf = Server(ctx.guild.id, {"subguilds": False})

        if sconf.ignore_channels == []:
            ig_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n"
        else:
            ig_desc = ""
            for ID in sconf.ignore_channels:
                ig_desc += f"> <#{ID}>\n"
        
        if sconf.log_channel is None:
            lc_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        else:
            lc_desc = f"> <#{sconf.log_channel}>"
        
        if sconf.mentioner_id is None:
            ping_desc = "> –≤—ã–∫–ª—é—á–µ–Ω–æ"
        else:
            ping_desc = f"> {ctx.guild.get_member(sconf.mentioner_id)}"
        
        if sconf.master_roles == []:
            mr_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else:
            mr_desc = ""
            for ID in sconf.master_roles:
                mr_desc += f"> <@&{ID}>\n"
        
        if sconf.creator_roles == []:
            cr_desc = "> –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else:
            cr_desc = ""
            for ID in sconf.creator_roles:
                cr_desc += f"> <@&{ID}>\n"
        
        if sconf.xp_locked:
            xpl_desc = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞"
        else:
            xpl_desc = "‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞"
        if sconf.auto_join:
            aj_desc = "‚úÖ –í–∫–ª—é—á–µ–Ω"
        else:
            aj_desc = "‚ùå –í—ã–∫–ª—é—á–µ–Ω"
        if sconf.block_leave:
            lb_desc = "‚úÖ –í–∫–ª—é—á–µ–Ω"
        else:
            lb_desc = "‚ùå –í—ã–∫–ª—é—á–µ–Ω"

        reply = discord.Embed(
            title = "‚öô –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            description = (
                f"**–ü—Ä–µ—Ñ–∏–∫—Å:** `{rconf.prefix}`"
            ),
            color = mmorpg_col("lilac")
        )
        reply.add_field(name="**–ö–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞**", value=f"{chan_desc}")
        reply.add_field(name="**–ö–∞–Ω–∞–ª—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—ã—Ç–∞**", value=f"{ig_desc}")
        reply.add_field(name="**–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤**", value=f"{lc_desc}", inline=False)
        reply.add_field(name="**–†–æ–ª–∏ –º–∞—Å—Ç–µ—Ä–∞ –≥–∏–ª—å–¥–∏–π:**", value=f"{mr_desc}")
        reply.add_field(name="**–†–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π**", value=f"{cr_desc}")
        reply.add_field(name="**–í–µ—Å—Ç–∏ –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ—Ç**", value=f"{ping_desc}", inline=False)
        reply.add_field(name="**–õ–∏–º–∏—Ç –≥–∏–ª—å–¥–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**", value=f"> {sconf.guild_limit}")
        reply.add_field(name="**–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≥–∏–ª—å–¥–∏—é**", value=f"> {sconf.member_limit}")
        reply.add_field(name="**–õ–∏–º–∏—Ç —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º –≥–∏–ª—å–¥–∏–π**", value=f"> {sconf.creator_limit}", inline=False)
        reply.add_field(name="**–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞**", value=f"> {xpl_desc}")
        reply.add_field(name="**–ê–≤—Ç–æ –≤—Ö–æ–¥ –≤ –≥–∏–ª—å–¥–∏–∏**", value=f"> {aj_desc}")
        reply.add_field(name="**–ó–∞–ø—Ä–µ—Ç –Ω–∞ –≤—ã—Ö–æ–¥ –∏–∑ –≥–∏–ª—å–¥–∏–π**", value=f"> {lb_desc}")

        reply.set_thumbnail(url = f"{ctx.guild.icon_url}")
        await ctx.send(embed = reply)


    @commands.cooldown(1, 3, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases = ["set-prefix", "setprefix", "sp", "gm-prefix"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞.",
        usage="–ù–æ–≤—ã–π_–ø—Ä–µ—Ñ–∏–∫—Å",
        brief="!" )
    async def prefix(self, ctx, text_input):
        text_input = text_input[:30]
        ResponseConfig(ctx.guild.id, dont_request_bd=True).set_prefix(text_input)
        reply = discord.Embed(
            title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
            description=f"–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å: {text_input}\n–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{text_input}settings`",
            color=mmorpg_col("clover")
        )
        reply.set_footer(text = str(ctx.author), icon_url = str(ctx.author.avatar_url))
        await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases = ["cmd-channels", "cmdchannels", "cc"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—ã.",
        usage='#–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...\ndelete  (—Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)' )
    async def cmd_channels(self, ctx, *, text_input):
        rconf = ResponseConfig(ctx.guild.id, dont_request_bd=True)
        raw_ch = text_input.split()
        if "delete" == raw_ch[0].lower():
            rconf.remove_all_cmd_channels()
            reply = discord.Embed(
                title = "‚ôª | –ö–∞–Ω–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã",
                description = "–¢–µ–ø–µ—Ä—å —è —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö",
                color = mmorpg_col("clover")
            )
            await ctx.send(embed = reply)

        else:
            channel_ids = []
            for s in raw_ch:
                # Converting string to channel
                tcc = commands.TextChannelConverter()
                try:
                    ch = await tcc.convert(ctx, s)
                except:
                    ch = None
                
                if ch is None:
                    pass
                elif not ch.id in channel_ids:
                    channel_ids.append(ch.id)

            channel_ids = channel_ids[:+30]
            if channel_ids != []:
                rconf.set_cmd_channels(channel_ids)
                desc = ""
                for ch in channel_ids:
                    desc += f"> <#{ch}>\n"
                reply = discord.Embed(
                    title = "üõ† –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                    description = (
                        f"–¢–µ–ø–µ—Ä—å –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö:\n"
                        f"{desc}"
                        f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã üòâ"
                    ),
                    color = mmorpg_col("lilac")
                )
                await ctx.send(embed = reply)
            
            else:
                reply = discord.Embed(color=discord.Color.dark_red())
                reply.title = "‚ùå | –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∫–∞–Ω–∞–ª—ã"
                reply.description = "–õ–∏–±–æ –í—ã —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ–≤–µ—Ä–Ω–æ, –ª–∏–±–æ —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –≤–∏–¥–µ—Ç—å –∏—Ö."
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["ignore-channels", "ignore", "ic"],
        description="–±–ª–æ–∫–∏—Ä—É–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.",
        usage='#–∫–∞–Ω–∞–ª-1 #–∫–∞–Ω–∞–ª-2 ...\ndelete  (—Å–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫)' )
    async def ignore_channels(self, ctx, *, text_input):
        sconf = Server(ctx.guild.id, dont_request_bd=True)
        raw_ch = text_input.split()
        if "delete" == raw_ch[0].lower():
            sconf.set_ignore_channels([])
            reply = discord.Embed(
                title = "‚ôª | –ö–∞–Ω–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã",
                description = "–¢–µ–ø–µ—Ä—å —è –Ω–∞—á–∏—Å–ª—è—é –æ–ø—ã—Ç –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö.",
                color = mmorpg_col("clover")
            )
            await ctx.send(embed = reply)

        else:
            channel_ids = []
            for s in raw_ch:
                # Converting string to channel
                tcc = commands.TextChannelConverter()
                try:
                    ch = await tcc.convert(ctx, s)
                except:
                    ch = None
                
                if ch is None:
                    pass
                elif not ch.id in channel_ids:
                    channel_ids.append(ch.id)

            channel_ids = channel_ids[:+30]
            if channel_ids != []:
                sconf.set_ignore_channels(channel_ids)
                desc = ""
                for ch in channel_ids:
                    desc += f"> <#{ch}>\n"
                reply = discord.Embed(color = mmorpg_col("lilac"))
                reply.title = "üõ† | –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
                reply.description = (
                        f"–¢–µ–ø–µ—Ä—å —è –Ω–∞—á–∏—Å–ª—è—é –æ–ø—ã—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö:\n"
                        f"{desc}"
                    )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed = reply)
            
            else:
                reply = discord.Embed(color=discord.Color.dark_red())
                reply.title = "‚ùå | –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∫–∞–Ω–∞–ª—ã"
                reply.description = "–õ–∏–±–æ –í—ã —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ–≤–µ—Ä–Ω–æ, –ª–∏–±–æ —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –≤–∏–¥–µ—Ç—å –∏—Ö."
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["xp-lock", "freeze"],
        description="–±–ª–æ–∫–∏—Ä—É–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –Ω–∞ –≤—Å—ë–º —Å–µ—Ä–≤–µ—Ä–µ.",
        usage='on\noff' )
    async def xp_lock(self, ctx, option):
        p = ctx.prefix
        option = option.lower()
        sconf = Server(ctx.guild.id, dont_request_bd=True)
        if option in ["on", "–≤–∫–ª"]:
            sconf.set_xp_lock(True)
            reply = discord.Embed(
                title = "üîí –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–í–∫–ª—é—á–µ–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞\n"
                    f"–í—ã–∫–ª—é—á–∏—Ç—å: `{p}xp-lock off`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif option in ["off", "–≤—ã–∫–ª"]:
            sconf.set_xp_lock(False)
            reply = discord.Embed(
                title = "üîë –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø—ã—Ç–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞\n"
                    f"–í–∫–ª—é—á–∏—Ç—å: `{p}xp-lock on`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è `{option}`",
                description = (
                    f"`{p}xp-lock on` - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –æ–ø—ã—Ç–∞\n"
                    f"`{p}xp-lock off` - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –æ–ø—ã—Ç–∞"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["auto-join", "join-filter", "aj"],
        description="–∫–æ–≥–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤–∫–ª—é—á–µ–Ω, –∫–æ–º–∞–Ω–¥–∞ `join` —Å–∞–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥–∏–ª—å–¥–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–æ–ø–∞–¥—ë—Ç —É—á–∞—Å—Ç–Ω–∏–∫.",
        usage='on\noff' )
    async def auto_join(self, ctx, option):
        p = ctx.prefix
        option = option.lower()
        sconf = Server(ctx.guild.id, dont_request_bd=True)
        if option in ["on", "–≤–∫–ª"]:
            sconf.set_auto_join(True)
            reply = discord.Embed(
                title = "üîí –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –≥–∏–ª—å–¥–∏—è–º.\n"
                    f"–í—ã–∫–ª—é—á–∏—Ç—å: `{p}auto-join off`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif option in ["off", "–≤—ã–∫–ª"]:
            sconf.set_auto_join(False)
            reply = discord.Embed(
                title = "üîë –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–í—ã–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –≥–∏–ª—å–¥–∏—è–º. –¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–∞–º–∏ –º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –≥–∏–ª—å–¥–∏—é –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è.\n"
                    f"–í–∫–ª—é—á–∏—Ç—å: `{p}auto-join on`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è `{option}`",
                description = (
                    f"`{p}auto-join on` - –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –≥–∏–ª—å–¥–∏—è–º.\n"
                    f"`{p}auto-join off` - –≤—ã–∫–ª—é—á–∏—Ç—å"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["block-leave", "bl", "blockleave"],
        description="–∫–æ–≥–¥–∞ –∑–∞–ø—Ä–µ—Ç –Ω–∞ –≤—ã—Ö–æ–¥ –≤–∫–ª—é—á–µ–Ω, —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å —Å–≤–æ—é —Ç–µ–∫—É—â—É—é –≥–∏–ª—å–¥–∏—é.",
        usage='on\noff' )
    async def block_leave(self, ctx, option):
        p = ctx.prefix
        option = option.lower()
        sconf = Server(ctx.guild.id, dont_request_bd=True)
        if option in ["on", "–≤–∫–ª"]:
            sconf.set_block_leave(True)
            reply = discord.Embed(
                title = "üîí –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ —Å–º–æ–≥—É—Ç –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –≥–∏–ª—å–¥–∏–π.\n"
                    f"–í—ã–∫–ª—é—á–∏—Ç—å: `{p}block-leave off`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        elif option in ["off", "–≤—ã–∫–ª"]:
            sconf.set_block_leave(False)
            reply = discord.Embed(
                title = "üîë –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                description = (
                    "–¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–Ω–æ–≤–∞ –º–æ–≥—É—Ç –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –≥–∏–ª—å–¥–∏–π.\n"
                    f"–í–∫–ª—é—á–∏—Ç—å: `{p}block-leave on`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)

        else:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è `{option}`",
                description = (
                    f"`{p}block-leave on` - –≤–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤—ã—Ö–æ–¥–∞\n"
                    f"`{p}block-leave off` - –≤—ã–∫–ª—é—á–∏—Ç—å"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["log-channel", "logchannel", "logs-channel", "lc"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –∏ –æ—Ç—á—ë—Ç–æ–≤ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö —Å –≥–∏–ª—å–¥–∏—è–º–∏.",
        usage='#–∫–∞–Ω–∞–ª\ndelete  (—Å–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫)' )
    async def log_channel(self, ctx, *, channel):
        pr = ctx.prefix
        if channel.lower() == "delete":
            Server(ctx.guild.id, {"_id": True}).set_log_channel(None)
            reply = discord.Embed(
                title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description=(
                    f"–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ —É–¥–∞–ª—ë–Ω\n\n"
                    f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{pr}settings`"
                ),
                color=mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        
        else:
            channel = await commands.TextChannelConverter().convert(ctx, channel)

            Server(ctx.guild.id, dont_request_bd=True).set_log_channel(channel.id)

            reply = discord.Embed(
                title="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description=(
                    f"–¢–µ–ø–µ—Ä—å –æ—Ç—á—ë—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –∫–∞–Ω–∞–ª <#{channel.id}>\n"
                    f"–û—Ç–º–µ–Ω–∏—Ç—å: `{pr}log-channel delete`\n"
                    f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{pr}settings`"
                ),
                color=mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["members-limit", "memberslimit", "ml"],
        description="—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –≤—Å–µ–º –≥–∏–ª—å–¥–∏—è–º. –£ –∫–∞–∂–¥–æ–π –≥–∏–ª—å–¥–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å–≤–æ–π –ª–∏–º–∏—Ç, –Ω–æ –Ω–µ –≤—ã—à–µ —ç—Ç–æ–≥–æ.",
        usage='–ß–∏—Å–ª–æ',
        brief="50" )
    async def members_limit(self, ctx, lim: IntConverter):
        pr = ctx.prefix
        if lim > member_limit or lim < 0:
            reply = discord.Embed(
                title = "‚ùå –û—à–∏–±–∫–∞",
                description = f"–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{member_limit}** –Ω–∞ –≥–∏–ª—å–¥–∏—é",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            Server(ctx.guild.id, dont_request_bd=True).set_member_limit(lim)
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = (
                    f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥–∏–ª—å–¥–∏—è—Ö: **{lim}**\n"
                    f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{pr}settings`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        name="guild-limit", aliases=["guildlimit", "gl"],
        description="—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
        usage='–ß–∏—Å–ª–æ',
        brief="20" )
    async def guilds_limit(self, ctx, lim: IntConverter):
        pr = ctx.prefix
        if lim > guild_limit or lim < 0:
            reply = discord.Embed(
                title = "‚ùå –û—à–∏–±–∫–∞",
                description = f"–õ–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{guild_limit}**",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            Server(ctx.guild.id, dont_request_bd=True).set_guild_limit(lim)
            reply = discord.Embed(
                title = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = (
                    f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –∫–ª–∞–Ω–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{lim}**\n"
                    f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{pr}settings`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(aliases=["clear-guilds", "delete-all-guilds"])
    async def clear_guilds(self, ctx):
        reply = discord.Embed(
            title="üõ† –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            description=(
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –í—ã —É–¥–∞–ª–∏—Ç–µ **–≤—Å–µ** –≥–∏–ª—å–¥–∏–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ `–¥–∞` –∏–ª–∏ `–Ω–µ—Ç`"
            )
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        sys_msg = await ctx.send(embed=reply)

        yes = ["yes", "y", "–¥–∞", "1"]
        no = ["no", "n", "–Ω–µ—Ç", "0"]
        def check(msg):
            if msg.channel.id != ctx.channel.id or msg.author.id != ctx.author.id:
                return False
            _1st_word = msg.content.split(maxsplit=1)[0]
            del msg
            if _1st_word.lower() in [*yes, *no]:
                return True
            if is_command(_1st_word, ctx.prefix, self.client):
                raise EmergencyExit()
            return False
        # Read message
        reply_text = None
        try:
            msg = await self.client.wait_for("message", check=check, timeout=60)
        except asyncio.TimeoutError:
            await ctx.send(f"{ctx.author.mention}, –í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏. –í—ã—Ö–æ–¥ –æ—Ç–º–µ–Ω—ë–Ω.")
        else:
            reply_text = msg.content.lower()
        
        # Delete sysmsg
        try:
            await sys_msg.delete()
        except:
            pass
        
        if reply_text is not None:
            if reply_text in no:
                reply = discord.Embed(
                    title="‚ùå | –û—Ç–º–µ–Ω–∞",
                    description="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
                    color=mmorpg_col("vinous")
                )
                reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                await ctx.send(embed=reply)

            elif reply_text in yes:
                if reply_text in ["yes", "1", "–¥–∞"]:
                    sconf = Server(ctx.guild.id, {"log_channel": True})
                    sconf.delete_all_guilds()
                    reply = discord.Embed(
                        title="‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = "–í—Å–µ –≥–∏–ª—å–¥–∏–∏ —É–¥–∞–ª–µ–Ω—ã",
                        color=mmorpg_col("clover")
                    )
                    reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
                    await ctx.send(embed=reply)

                    log = discord.Embed(
                        title="üóë –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –≥–∏–ª—å–¥–∏–∏",
                        description=(
                            f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {ctx.author}"
                        ),
                        color=discord.Color.dark_red()
                    )
                    await post_log(ctx.guild, sconf.log_channel, log)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        name="master-role", aliases=["master-roles", "masterrole", "mr"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–æ–ª–∏, –¥–∞—é—â–∏–µ –µ—ë –æ–±–ª–∞–¥–∞—Ç–µ–ª—è–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—é–±—ã—Ö –≥–∏–ª—å–¥–∏–π, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –∫–∏–∫ –∏–∑ –≥–∏–ª—å–¥–∏–π –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏.",
        usage="add @–†–æ–ª—å  (–¥–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å)\ndelete @–†–æ–ª—å  (—Å–±—Ä–æ—Å–∏—Ç—å)\ndelete all  (—Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—ë)" )
    async def master_role(self, ctx, option, *, role_s=None):
        mr_lim = 5
        p, cmd = ctx.prefix, ctx.command.name

        parameters = {
            "add": ["append", "set"],
            "delete": ["remove"]
        }
        parameter = find_alias(parameters, option)
        if parameter is None:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä `{option}`",
                description = (
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
                    f"> `{p}{cmd} add`\n"
                    f"> `{p}{cmd} delete`"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        elif role_s is None:
            help_texts = {
                "add": {
                    "desc": "–î–æ–±–∞–≤–ª—è–µ—Ç –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                    "usage": f"`{p}{cmd} add @–†–æ–ª—å`"
                },
                "delete": {
                    "desc": "–£–¥–∞–ª—è–µ—Ç –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏",
                    "usage": (
                        f"—É–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏: `{p}{cmd} delete @–†–æ–ª—å`\n"
                        f"–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–µ–π: `{p}{cmd} delete all`"
                    )
                }
            }
            help_text = help_texts[parameter]
            reply = discord.Embed(
                title=f"‚ùî –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `{p}{cmd} {parameter}`",
                description=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {help_text['desc']}\n**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {help_text['usage']}"
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        else:
            sconf = Server(ctx.guild.id, {"master_roles": True})
            ghost_roles = [rid for rid in sconf.master_roles if ctx.guild.get_role(rid) is None]
            if ghost_roles != []:
                sconf.remove_master_roles(*ghost_roles)

            if role_s.lower() != "all":
                role = await commands.RoleConverter().convert(ctx, role_s)
            if parameter == "add":
                if role.id in sconf.master_roles:
                    reply = discord.Embed(
                        title = "üí¢ | –£–∂–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                        description = f"<@&{role.id}> —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                elif len(sconf.master_roles) - len(ghost_roles) >= mr_lim:
                    reply = discord.Embed(
                        title = "üí¢ | –õ–∏–º–∏—Ç",
                        description = (
                            f"–ú–∞—Å—Ç–µ—Ä-—Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ {mr_lim}\n"
                            f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{p}settings`"
                        ),
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                else:
                    sconf.add_master_role(role.id)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

            else:
                if role_s.lower() == "all":
                    sconf.remove_master_roles(*sconf.master_roles)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–í—Å–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏ —É–¥–∞–ª–µ–Ω—ã.\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                elif role.id not in sconf.master_roles:
                    reply = discord.Embed(
                        title = "üí¢ | –ù–µ –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å",
                        description = f"<@&{role.id}> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                else:
                    sconf.remove_master_roles(role.id)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª—å—é\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases = ["creator-role"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–æ–ª–∏, –¥–∞—é—â–∏–µ –µ—ë –æ–±–ª–∞–¥–∞—Ç–µ–ª—è–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–π.",
        usage="add @–†–æ–ª—å  (–¥–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª—è)\ndelete @–†–æ–ª—å  (—Å–±—Ä–æ—Å–∏—Ç—å)\ndelete all  (—Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—ë)",
        brief="add @Moderator\nadd @everyone  (—Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–∏–ª—å–¥–∏–∏)" )
    async def creator(self, ctx, option, *, role_s=None):
        cr_lim = 5
        p, cmd = ctx.prefix, ctx.command.name

        parameters = {
            "add": ["append", "set"],
            "delete": ["remove"]
        }
        parameter = find_alias(parameters, option)
        if parameter is None:
            reply = discord.Embed(
                title = f"üí¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä `{option}`",
                description = (
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
                    f"> `{p}{cmd} add`\n"
                    f"> `{p}{cmd} delete`"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        elif role_s is None:
            help_texts = {
                "add": {
                    "desc": "–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                    "usage": f"`{p}{cmd} add @–†–æ–ª—å`"
                },
                "delete": {
                    "desc": "–£–¥–∞–ª—è–µ—Ç —Ä–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                    "usage": (
                        f"—É–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π: `{p}{cmd} delete @–†–æ–ª—å`\n"
                        f"–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö: `{p}{cmd} delete all`"
                    )
                }
            }
            help_text = help_texts[parameter]
            reply = discord.Embed(
                title=f"‚ùî –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `{p}{cmd} {parameter}`",
                description=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {help_text['desc']}\n**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {help_text['usage']}"
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        else:
            sconf = Server(ctx.guild.id, {"creator_roles": True})
            ghost_roles = [rid for rid in sconf.creator_roles if ctx.guild.get_role(rid) is None]
            if ghost_roles != []:
                sconf.remove_creator_roles(*ghost_roles)

            if role_s.lower() != "all":
                role = await commands.RoleConverter().convert(ctx, role_s)
            if parameter == "add":
                if role.id in sconf.creator_roles:
                    reply = discord.Embed(
                        title = "üí¢ | –£–∂–µ —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                        description = f"<@&{role.id}> —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                elif len(sconf.creator_roles) - len(ghost_roles) >= cr_lim:
                    reply = discord.Embed(
                        title = "üí¢ | –õ–∏–º–∏—Ç",
                        description = (
                            f"–†–æ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ {cr_lim}\n"
                            f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: `{p}settings`"
                        ),
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                else:
                    sconf.add_creator_role(role.id)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–¢–µ–ø–µ—Ä—å <@&{role.id}> —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

            else:
                if role_s.lower() == "all":
                    sconf.remove_creator_roles(*sconf.creator_roles)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"–í—Å–µ —Ä–æ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π —É–¥–∞–ª–µ–Ω—ã.\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                elif role.id not in sconf.creator_roles:
                    reply = discord.Embed(
                        title = "üí¢ | –ù–µ —Ä–æ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π",
                        description = f"<@&{role.id}> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π.\n–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("vinous")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)

                else:
                    sconf.remove_creator_roles(role.id)
                    reply = discord.Embed(
                        title = "‚ôª | –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                        description = f"<@&{role.id}> –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–ª—å–¥–∏–π\n–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫: `{p}settings`",
                        color = mmorpg_col("clover")
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(embed=reply)
    

    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["creator-limit", "crelim"],
        description="—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º –∫–ª–∞–Ω–æ–≤. –ù–µ –∫–∞—Å–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏.",
        usage="–ß–∏—Å–ª–æ",
        brief="1" )
    async def creator_limit(self, ctx, lim: IntConverter):
        pr = ctx.prefix
        if lim > guild_limit or lim < 0:
            reply = discord.Embed(
                title = "‚ùå | –û—à–∏–±–∫–∞",
                description = f"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–ª–∞–Ω–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å **{guild_limit}**",
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)
        else:
            Server(ctx.guild.id, dont_request_bd=True).set_creator_limit(lim)
            reply = discord.Embed(
                title = "‚úÖ | –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
                description = (
                    f"–¢–µ–∫—É—â–µ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–ª–∞–Ω–æ–≤: **{lim}**\n"
                    f"‚ùó–ù–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –º–∞—Å—Ç–µ—Ä-—Ä–æ–ª–∏\n"
                    f"–û—Ç—á—ë—Ç –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: `{pr}settings`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed = reply)


    @commands.cooldown(1, 5, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases = ["ping-count", "pingcount", "pc"],
        description="–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±—É–¥—É—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å—Å—è –≥–∏–ª—å–¥–∏—è–º–∏.",
        usage="@–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        brief="@MEE6#4876" )
    async def ping_count(self, ctx, *, member):
        if member.lower() == "delete":
            member = None
            desc = "–ë–æ–ª—å—à–µ –Ω–µ –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π"
        else:
            member = await commands.MemberConverter().convert(ctx, member)
            desc = f"–¢–µ–ø–µ—Ä—å –≤ –≥–∏–ª—å–¥–∏—è—Ö –≤–µ–¥—ë—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç –ø–∏–Ω–≥–æ–≤ –æ—Ç **{member}**"
            member = member.id
        Server(ctx.guild.id, dont_request_bd=True).set_mentioner_id(member)
        reply = discord.Embed(
            title = "‚úÖ | –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ",
            description = desc,
            color = mmorpg_col("clover")
        )
        await ctx.send(embed = reply)


    @commands.cooldown(1, 10, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases = ["reset-guilds", "resetguilds", "rg", "reset-guild", "resetguild"],
        description="–æ–±–Ω—É–ª—è–µ—Ç —Ç–æ–ø –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É.",
        usage="exp\nreputation\nmentions" )
    async def reset_guilds(self, ctx, parameter):
        pr = ctx.prefix
        params = {
            "exp": ["xp", "–æ–ø—ã—Ç"],
            "mentions": ["pings", "—É–ø–æ–º–∏–Ω–∞–Ω–∏—è", "—Ç–µ–≥–∏"],
            "reputation": ["—Ä–µ–ø—É—Ç–∞—Ü–∏—è"]
        }
        parameter = find_alias(params, parameter)

        if parameter is None:
            reply = discord.Embed(
                title = "üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
                description = (
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                    "> `exp`\n"
                    "> `mentions`\n"
                    "> `reputation`\n"
                    f"–ù–∞–ø—Ä–∏–º–µ—Ä `{pr}reset-guilds exp`"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

        else:
            proj = {"log_channel": True}
            if parameter is "exp": proj["subguilds.members"] = True
            sconf = Server(ctx.guild.id, proj)
            del proj
            desc = "???"

            if parameter is "exp":
                sconf.reset_xp()
                desc = "–û–ø—ã—Ç –æ–±–Ω—É–ª—ë–Ω"
            elif parameter is "reputation":
                sconf.reset_reputation()
                desc = "–†–µ–ø—É—Ç–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞"
            elif parameter is "mentions":
                sconf.reset_mentions()
                desc = "–£–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–±–Ω—É–ª–µ–Ω—ã"
            reply = discord.Embed(
                title = "‚ôª | –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
                description = desc,
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

            log = discord.Embed(
                title="‚ôª | –°–±—Ä–æ—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫",
                description=(
                    f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {ctx.author}\n"
                    f"{desc}"
                ),
                color=discord.Color.red()
            )
            
            await post_log(ctx.guild, sconf.log_channel, log)


    @commands.cooldown(1, 3, commands.BucketType.member)
    @commands.is_owner()
    @commands.command(aliases = ["smart-reset", "sr"])
    async def smart_reset(self, ctx, cycles: int=1, hours: int=1):
        if not ctx.author.guild_permissions.administrator:
            reply = discord.Embed(
                title = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description = (
                    "–¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:\n"
                    "> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                ),
                color = mmorpg_col("vinous")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

        else:
            if cycles < 1:
                cycles = 1
            if hours < 1:
                hours = 1
            timer_data = {
                "cycles": cycles,
                "interval": hours,
                "last_at": datetime.datetime.utcnow()
            }
            timer = Timer(ctx.guild.id, timer_data)
            timer.save()
            
            reply = discord.Embed(
                title = "üïë –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω",
                description = (
                    f"–°–±—Ä–æ—Å –æ—á–∫–æ–≤ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å **{cycles}** —Ä–∞–∑ —Å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏ –ø–æ **{hours}** —á–∞—Å–æ–≤\n"
                    f"**–°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ:** `{timer.next_at + datetime.timedelta(hours=3)}  (UTC+3)`"
                ),
                color = mmorpg_col("clover")
            )
            reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

            while timer.cycles > 0:
                await asyncio.sleep(timer.time_remaining.total_seconds())
                await do_smart_reset(ctx.guild)
                timer.update()
            timer.delete()

    
    @commands.cooldown(1, 3, commands.BucketType.member)
    @commands.is_owner()
    @commands.command(aliases = ["smart-reset-status", "srs"])
    async def smart_reset_status(self, ctx):
        timer = Timer(ctx.guild.id)
        reply = discord.Embed(
            title="üïë –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ –æ–±–Ω—É–ª–µ–Ω–∏—è",
            description=(
                f"**–¶–∏–∫–ª–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å:** {timer.cycles}\n"
                f"**–ò–Ω—Ç–µ—Ä–≤–∞–ª:** (–≤ —á–∞—Å–∞—Ö) {timer.interval.total_seconds() // 3600}\n"
                f"**–ë–ª–∏–∂–∞–π—à–µ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ:** {timer.next_at + datetime.timedelta(hours=3)} (UTC+3)\n"
            ),
            color=discord.Color.greyple()
        )
        reply.set_footer(text = f"{ctx.author}", icon_url = f"{ctx.author.avatar_url}")
        await ctx.send(embed=reply)



def setup(client):
    client.add_cog(setting_system(client))